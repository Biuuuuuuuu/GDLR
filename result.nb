(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    271698,       5538]
NotebookOptionsPosition[    270193,       5486]
NotebookOutlinePosition[    270567,       5502]
CellTagsIndexPosition[    270524,       5499]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "199.83990055280407", ",", 
       "248.0227316459324"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "72.76815120968152", ",", 
       "86.4371530122528"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "100000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "58.86729491077962", ",", 
       "58.26335848487239"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "189.9447497373825", ",", 
       "191.59376699897967"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "76.73678617520198", ",", 
       "56.82318196645246"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "100000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "116.68829150074805", ",", 
       "92.52691285422145"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "183.5022287412792", ",", 
       "185.0524700588001"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "66.31707696921987", ",", 
       "77.88315742393686"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "100000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "66.43061015646184", ",", 
       "41.39087077629701"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "201.50250297108093", ",", 
       "142.66914114351525"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "80.39553783937612", ",", 
       "56.403563474314716"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "100000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "47.15010207923777", ",", 
       "39.202153797466785"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res2", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "189.99602267434503", ",", 
       "187.64949977019955"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "81.03577303740923", ",", 
       "81.0097362400165"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "11000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "59.87464752698263", ",", 
       "59.80288431897588"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "53.0648822290987", ",", 
       "51.878844384756526"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "21000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "48.05142914631233", ",", 
       "46.18845438135013"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "26000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "45.6423744248105", ",", 
       "43.331452526438696"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "196.14662187874004", ",", 
       "193.15559103805217"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "80.0133558802138", ",", 
       "79.6037391742479"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "11000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "60.365478841995134", ",", 
       "59.56757062622842"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "52.11173764495127", ",", 
       "51.08218763725519"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "21000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "47.913930647750426", ",", 
       "45.95116295951007"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "26000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "45.38097417747147", ",", 
       "42.88390452683346"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "190.43967443963638", ",", 
       "187.85157420617438"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "79.98295489830574", ",", 
       "79.48387916919536"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "11000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "59.514116062932864", ",", 
       "58.657656086821405"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "51.62197955448365", ",", 
       "50.286541985370846"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "21000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "49.06099443994102", ",", 
       "47.487733126924574"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "26000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "45.88329738138243", ",", 
       "43.678893812669635"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res3", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "36000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "69.66047269234107", ",", 
       "124.62584006836063"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "46000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "79.00698407761612", ",", 
       "134.86294942585798"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "56000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "91.35639389917445", ",", 
       "147.89408156591173"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "36000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "69.34980552073856", ",", 
       "123.5647613043063"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "46000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "77.97933991955824", ",", 
       "132.23027500339313"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "56000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "90.91366023641177", ",", 
       "146.6288052927214"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "36000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "69.42696964379746", ",", 
       "123.0136224318594"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "46000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "79.49318827923533", ",", 
       "134.89728491747007"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "56000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "89.50845699583432", ",", 
       "145.5669749552364"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res4", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", "0.01", ",", 
       RowBox[{"2.0140033585760614", "*", 
        RowBox[{"10", "^", "132"}]}], ",", 
       RowBox[{"1.9360133423535284", "*", 
        RowBox[{"10", "^", "132"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "16000", ",", "0.001", ",", "4394266178816.9917", ",", 
       "4222037875204.217"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "4"}], ")"}]}], ",", "54.46661536256501", ",", 
       "61.54444189510341"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "61.95527301357446", ",", 
       "58.80581225761248"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "6"}], ")"}]}], ",", "158.41935613146478", ",", 
       "138.22850019651744"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "7"}], ")"}]}], ",", "390.62216161793214", ",", 
       "366.31315773901594"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", "0.01", ",", 
       RowBox[{"2.6177341419596363", "*", 
        RowBox[{"10", "^", "132"}]}], ",", 
       RowBox[{"2.516365329773515", "*", 
        RowBox[{"10", "^", "132"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "16000", ",", "0.001", ",", "8520417800573.545", ",", 
       "8186466202224.294"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "4"}], ")"}]}], ",", "54.725048833005594", ",", 
       "59.9621031584359"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "62.413522264138635", ",", 
       "58.675847467950646"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "6"}], ")"}]}], ",", "157.05191555809333", ",", 
       "136.22589549262713"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "7"}], ")"}]}], ",", "406.37297481278796", ",", 
       "381.0413254912128"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", "0.01", ",", 
       RowBox[{"3.1020019697802855", "*", 
        RowBox[{"10", "^", "132"}]}], ",", 
       RowBox[{"2.981880430302545", "*", 
        RowBox[{"10", "^", "132"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "16000", ",", "0.001", ",", "8326227030606.743", ",", 
       "7999886690349.601"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "4"}], ")"}]}], ",", "54.430836192850286", ",", 
       "59.92307459958528"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "62.665311988151466", ",", 
       "58.981811098637955"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "6"}], ")"}]}], ",", "162.88497017872143", ",", 
       "142.5130569114401"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "7"}], ")"}]}], ",", "387.75692949293045", ",", 
       "363.5504238209333"}], "}"}], ","}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res5", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "98.0198245245403", ",", 
       "69.9557028602133"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"44", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "364.8981961101469", ",", 
       "289.47636119470616"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"84", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "492.5258508659228", ",", 
       "408.8287991294623"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"124", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "520.9781033414386", ",", 
       "432.85543116836"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"164", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "489.17279260932867", ",", 
       "402.9282099169774"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"204", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "512.9325667371994", ",", 
       "426.08828311685636"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"244", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "514.5289496496517", ",", 
       "428.53335100313524"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"284", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "490.0033931262071", ",", 
       "403.9558529862842"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"324", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "509.1688798859676", ",", 
       "422.8943700793187"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"364", ",", "16000", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}]}], ",", "501.8665496074847", ",", 
       "415.3621899706902"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res6", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "89.28676727643118", ",", 
       "99.48876193757657"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"44", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "131.06381607715258", ",", 
       "142.3228112584811"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"84", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "238.34222604968366", ",", 
       "242.5922337420746"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"124", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "220.58977483232093", ",", 
       "228.06447932857407"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"164", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "204.02890858257373", ",", 
       "213.64233002111303"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"204", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "390.52244236415373", ",", 
       "454.8484942188906"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"244", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "366.0791619935766", ",", 
       "431.1800900565794"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"284", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "346.12930984618924", ",", 
       "414.88940726994497"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"324", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "328.4538994883684", ",", 
       "392.62602699850225"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"364", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "342.6784856803614", ",", 
       "420.00087735957374"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res7", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "89.10505728125224", ",", 
       "91.14631131529688"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "1000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "301.46421857574603", ",", 
       "265.24376382393785"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "1000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "512.7212531384049", ",", 
       "467.0022796347405"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "66.1230711913047", ",", 
       "64.24498604767705"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "2000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "205.76989408880596", ",", 
       "180.64619985135096"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "2000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "480.76209572278134", ",", 
       "438.79099180655686"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "56.92443372447203", ",", 
       "51.45625701064812"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "3000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "157.88158209228433", ",", 
       "140.7859671546732"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "3000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "473.05748972021274", ",", 
       "430.5087322905669"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "54.826726265635145", ",", 
       "46.45245141553478"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "135.1458018576508", ",", 
       "123.18563001358245"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "4000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "491.31898244146106", ",", 
       "449.8035684295883"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "53.29692492082962", ",", 
       "42.706094585488906"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "125.36213477216388", ",", 
       "117.02344186206541"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "5000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "466.79273353452396", ",", 
       "424.37703485952335"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "51.74857610560899", ",", 
       "39.86057402378395"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "6000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "115.30479732979165", ",", 
       "109.37487163675519"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "6000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "473.82093316654345", ",", 
       "433.92741681747765"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "7000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "50.832767672300655", ",", 
       "37.73242992516905"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "7000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "108.70160767282091", ",", 
       "103.46494688491418"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "7000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "471.0487729315507", ",", 
       "431.7973484480205"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "8000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "50.380534117994976", ",", 
       "36.27840205951104"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "8000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "103.450826609548", ",", 
       "99.28451730627692"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "8000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "464.5648316282554", ",", 
       "426.79862438406474"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "9000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "50.25759997195042", ",", 
       "35.011176023876935"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"10", ",", "9000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "99.53311672104381", ",", 
       "96.07340553941133"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"101", ",", "9000", ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "5"}], ")"}]}]}], ",", "439.44056270997413", ",", 
       "401.2445526654226"}], "}"}], ","}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.740022889001393*^9, 3.7400231504092298`*^9}, {
   3.7400239947116766`*^9, 3.7400241896316586`*^9}, {3.7400242217646556`*^9, 
   3.740024613578144*^9}, {3.7400248679474716`*^9, 3.7400249100010147`*^9}, {
   3.7400283228941774`*^9, 3.740028677327267*^9}, 3.740028721810588*^9, {
   3.7400305867119217`*^9, 3.7400307377523937`*^9}, {3.740031547835566*^9, 
   3.7400317071599903`*^9}, {3.740033376772072*^9, 3.740033740210783*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowRes", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"res", ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"List", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "res", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "res", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"HoldForm", "[", "iteration", "]"}], ",", 
          RowBox[{"HoldForm", "[", "MSE", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<train\>\"", ",", "\"\<test\>\""}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"GrayLevel", "[", "0", "]"}], "}"}]}], "\[IndentingNewLine]",
        ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<batch size=1, \
\[Alpha]=\!\(TraditionalForm\`\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "\[IndentingNewLine]",
       "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74002315602322*^9, 3.740023164871242*^9}, {
   3.7400232023932295`*^9, 3.7400232378502307`*^9}, {3.740023272348215*^9, 
   3.740023298554217*^9}, {3.740023334448139*^9, 3.740023349564136*^9}, 
   3.7400234235721345`*^9, {3.740023595696158*^9, 3.740023612125148*^9}, {
   3.7400237948931584`*^9, 3.740023810891137*^9}, {3.74002468084097*^9, 
   3.740024693586977*^9}, {3.740024924886801*^9, 3.7400250971864166`*^9}, 
   3.7400251426320047`*^9, {3.740025201247602*^9, 3.740025255663843*^9}, {
   3.7400270820527177`*^9, 3.7400271450130935`*^9}, {3.7400274582440395`*^9, 
   3.7400274697370515`*^9}, {3.7400283086761503`*^9, 
   3.7400283136891484`*^9}, {3.740028684413246*^9, 3.7400286880455217`*^9}, {
   3.7400287448935895`*^9, 3.7400287466285644`*^9}, {3.740028786973753*^9, 
   3.7400287908667464`*^9}, {3.740028827962014*^9, 3.740028870826003*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ShowResAlpha", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"res", ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"List", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log10", "[", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "18"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log10", "[", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "18"}], "}"}]}], "]"}], ","}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Log10(\[Alpha])\>\"", ",", "\"\<MSE\>\""}], "}"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<train\>\"", ",", "\"\<test\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<batch size=1, iteration=\!\(TraditionalForm\`16000\)\>\""}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "400"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResB", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"res", ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"404", ",", "i"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "4", ",", "364", ",", "40"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<batch size\>\"", ",", "\"\<MSE\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<train\>\"", ",", "\"\<test\>\"", ",", "\"\<S mod b\>\""}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<\[Alpha]=\!\(TraditionalForm\`\*SuperscriptBox[\(10\), \
\(-5\)]\), iteration=batch size * 1000\>\""}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResBI", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"res", ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "res", "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<batch size\>\"", ",", "\"\<iteration\>\"", ",", "\"\<MSE\>\""}],
          "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<train\>\"", ",", "\"\<test\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<\[Alpha]=\!\(TraditionalForm\`5\[Times]\*SuperscriptBox[\(10\), \
\(-5\)]\)\>\""}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowResBI2D", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"res", ",", "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "2"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "2"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "2"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "2"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", "*", "i"}], "+", "3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "8"}], "}"}]}], "]"}]}], "}"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<iteration\>\"", ",", "\"\<MSE\>\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<b=1 train\>\"", ",", "\"\<b=1 test\>\"", ",", 
           "\[IndentingNewLine]", "\"\<b=10 train\>\"", ",", 
           "\"\<b=10 test\>\"", ",", "\[IndentingNewLine]", 
           "\"\<b=101 train\>\"", ",", "\"\<b=101 test\>\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<\[Alpha]=\!\(TraditionalForm\`5\[Times]\*SuperscriptBox[\(10\), \
\(-5\)]\)\>\""}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7400233834621344`*^9, 3.740023383515136*^9}, {
  3.7400288791970215`*^9, 3.7400289368126335`*^9}, {3.7400289746265717`*^9, 
  3.740029167167488*^9}, {3.7400292162627945`*^9, 3.7400292168887496`*^9}, {
  3.7400293317836075`*^9, 3.740029335069629*^9}, {3.7400295476406326`*^9, 
  3.7400295539896307`*^9}, {3.7400295924821453`*^9, 3.740029642383582*^9}, {
  3.7400304014814553`*^9, 3.740030560995514*^9}, {3.740031742406476*^9, 
  3.740031778977478*^9}, {3.7400325444157796`*^9, 3.7400325596486034`*^9}, {
  3.740033203333637*^9, 3.740033372569048*^9}, {3.7400338132201414`*^9, 
  3.740033813920373*^9}, {3.740033918460702*^9, 3.7400339435287*^9}, {
  3.740034176404606*^9, 3.740034335190952*^9}, {3.740034390912951*^9, 
  3.740034410576954*^9}, {3.740034466209141*^9, 3.740034536351081*^9}, {
  3.7400346270614223`*^9, 3.74003464014441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowRes", "[", "res", "]"}]], "Input",
 CellChangeTimes->{{3.740025027599049*^9, 3.7400250321540365`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 199.83990055280407`}, {10000., 72.76815120968152}, {
         100000., 58.86729491077962}, {1000., 189.9447497373825}, {10000., 
         76.73678617520198}, {100000., 116.68829150074805`}, {1000., 
         183.5022287412792}, {10000., 66.31707696921987}, {100000., 
         66.43061015646184}, {1000., 201.50250297108093`}, {10000., 
         80.39553783937612}, {100000., 47.15010207923777}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 248.0227316459324}, {10000., 86.4371530122528}, {
         100000., 58.26335848487239}, {1000., 191.59376699897967`}, {10000., 
         56.82318196645246}, {100000., 92.52691285422145}, {1000., 
         185.0524700588001}, {10000., 77.88315742393686}, {100000., 
         41.39087077629701}, {1000., 142.66914114351525`}, {10000., 
         56.403563474314716`}, {100000., 
         39.202153797466785`}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 100000.}, {0, 248.0227316459324}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["iteration", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["MSE", HoldForm], TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0]}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"batch size=1, \
\[Alpha]=\\!\\(TraditionalForm\\`\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
       TraditionalForm], PlotRange -> {{0, 100000.}, {0, 248.0227316459324}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"train\"", "\"test\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                 Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                 Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0], Editable -> False, Selectable -> False], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7400250328190393`*^9, 3.740025147868979*^9, {3.7400252185116286`*^9, 
   3.7400252594358335`*^9}, 3.740027150907121*^9, 3.7400274733540697`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowRes", "[", "res2", "]"}]], "Input",
 CellChangeTimes->{{3.7400252712218337`*^9, 3.740025279270832*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 189.99602267434503`}, {6000., 81.03577303740923}, {
         11000., 59.87464752698263}, {16000., 53.0648822290987}, {21000., 
         48.05142914631233}, {26000., 45.6423744248105}, {1000., 
         196.14662187874004`}, {6000., 80.0133558802138}, {11000., 
         60.365478841995134`}, {16000., 52.11173764495127}, {21000., 
         47.913930647750426`}, {26000., 45.38097417747147}, {1000., 
         190.43967443963638`}, {6000., 79.98295489830574}, {11000., 
         59.514116062932864`}, {16000., 51.62197955448365}, {21000., 
         49.06099443994102}, {26000., 45.88329738138243}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 187.64949977019955`}, {6000., 81.0097362400165}, {
         11000., 59.80288431897588}, {16000., 51.878844384756526`}, {21000., 
         46.18845438135013}, {26000., 43.331452526438696`}, {1000., 
         193.15559103805217`}, {6000., 79.6037391742479}, {11000., 
         59.56757062622842}, {16000., 51.08218763725519}, {21000., 
         45.95116295951007}, {26000., 42.88390452683346}, {1000., 
         187.85157420617438`}, {6000., 79.48387916919536}, {11000., 
         58.657656086821405`}, {16000., 50.286541985370846`}, {21000., 
         47.487733126924574`}, {26000., 
         43.678893812669635`}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {609.375, 0}, 
     PlotRange -> {{1000., 26000.}, {0, 196.14662187874004`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["iteration", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["MSE", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {609.375, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0]}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"batch size=1, \
\[Alpha]=\\!\\(TraditionalForm\\`\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
       TraditionalForm], 
     PlotRange -> {{1000., 26000.}, {0, 196.14662187874004`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"train\"", "\"test\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                 Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                 Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0], Editable -> False, Selectable -> False], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.740025280478858*^9, 3.7400271540451183`*^9, 
  3.7400274753740683`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowRes", "[", "res3", "]"}]], "Input",
 CellChangeTimes->{{3.7400252832868347`*^9, 3.740025287442835*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{36000., 69.66047269234107}, {46000., 79.00698407761612}, {
         56000., 91.35639389917445}, {36000., 69.34980552073856}, {46000., 
         77.97933991955824}, {56000., 90.91366023641177}, {36000., 
         69.42696964379746}, {46000., 79.49318827923533}, {56000., 
         89.50845699583432}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{36000., 124.62584006836063`}, {46000., 
         134.86294942585798`}, {56000., 147.89408156591173`}, {36000., 
         123.5647613043063}, {46000., 132.23027500339313`}, {56000., 
         146.6288052927214}, {36000., 123.0136224318594}, {46000., 
         134.89728491747007`}, {56000., 
         145.5669749552364}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {35687.5, 0}, 
     PlotRange -> {{36000., 56000.}, {0, 147.89408156591173`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["iteration", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["MSE", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {35687.5, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0]}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"batch size=1, \
\[Alpha]=\\!\\(TraditionalForm\\`\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
       TraditionalForm], 
     PlotRange -> {{36000., 56000.}, {0, 147.89408156591173`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"train\"", "\"test\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                 Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                 Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0], Editable -> False, Selectable -> False], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7400252882878585`*^9, 3.740027156518114*^9, 
  3.7400274909901953`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowResAlpha", "[", "res4", "]"}]], "Input",
 CellChangeTimes->{{3.7400287058305273`*^9, 3.7400287116965723`*^9}, {
  3.740029134793386*^9, 3.740029136375375*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-2., 2.0140033585760614`*^132}, {-3., 
         4.3942661788169917`*^12}, {-4., 54.46661536256501}, {-5., 
         61.95527301357446}, {-6., 158.41935613146478`}, {-7., 
         390.62216161793214`}, {-2., 2.6177341419596363`*^132}, {-3., 
         8.520417800573545*^12}, {-4., 54.725048833005594`}, {-5., 
         62.413522264138635`}, {-6., 157.05191555809333`}, {-7., 
         406.37297481278796`}, {-2., 3.1020019697802855`*^132}, {-3., 
         8.326227030606743*^12}, {-4., 54.430836192850286`}, {-5., 
         62.665311988151466`}, {-6., 162.88497017872143`}, {-7., 
         387.75692949293045`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-2., 1.9360133423535284`*^132}, {-3., 
         4.222037875204217*^12}, {-4., 61.54444189510341}, {-5., 
         58.80581225761248}, {-6., 138.22850019651744`}, {-7., 
         366.31315773901594`}, {-2., 2.516365329773515*^132}, {-3., 
         8.186466202224294*^12}, {-4., 59.9621031584359}, {-5., 
         58.675847467950646`}, {-6., 136.22589549262713`}, {-7., 
         381.0413254912128}, {-2., 2.981880430302545*^132}, {-3., 
         7.999886690349601*^12}, {-4., 59.92307459958528}, {-5., 
         58.981811098637955`}, {-6., 142.5130569114401}, {-7., 
         363.5504238209333}}]}, {}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{-7., 0.}, {0, 400}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Log10(\[Alpha])\"", TraditionalForm], 
       FormBox["\"MSE\"", TraditionalForm]}, AxesOrigin -> {0., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"batch size=1, iteration=\\!\\(TraditionalForm\\`16000\\)\"", 
       TraditionalForm], PlotRange -> {{-7., 0.}, {0, 400}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"train\"", "\"test\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.740028712658589*^9, 3.7400287511255894`*^9}, 
   3.740028795857745*^9, 3.7400291371263685`*^9, 3.740029170404462*^9, 
   3.740029219951599*^9, 3.74002933894663*^9, 3.7400295589506454`*^9, {
   3.7400296161303687`*^9, 3.7400296452825713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowResB", "[", "res5", "]"}]], "Input",
 CellChangeTimes->{{3.7400305769625273`*^9, 3.7400305808959208`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{4., 98.0198245245403}, {44., 364.8981961101469}, {84., 
         492.5258508659228}, {124., 520.9781033414386}, {164., 
         489.17279260932867`}, {204., 512.9325667371994}, {244., 
         514.5289496496517}, {284., 490.0033931262071}, {324., 
         509.1688798859676}, {364., 501.8665496074847}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{4., 69.9557028602133}, {44., 289.47636119470616`}, {84., 
         408.8287991294623}, {124., 432.85543116836}, {164., 
         402.9282099169774}, {204., 426.08828311685636`}, {244., 
         428.53335100313524`}, {284., 403.9558529862842}, {324., 
         422.8943700793187}, {364., 415.3621899706902}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{4., 0.}, {44., 8.}, {84., 68.}, {124., 32.}, {164., 76.}, {
         204., 200.}, {244., 160.}, {284., 120.}, {324., 80.}, {364., 
         40.}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 364.}, {0, 520.9781033414386}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"batch size\"", TraditionalForm], 
       FormBox["\"MSE\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Alpha]=\\!\\(TraditionalForm\\`\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\), iteration=batch size * 1000\"", TraditionalForm], 
     PlotRange -> {{0, 364.}, {0, 520.9781033414386}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"train\"", "\"test\"", "\"S mod b\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.740030742796571*^9, 3.7400325772676*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowResB", "[", "res6", "]"}]], "Input",
 CellChangeTimes->{{3.7400317135159807`*^9, 3.7400317189010286`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{4., 89.28676727643118}, {44., 131.06381607715258`}, {84., 
         238.34222604968366`}, {124., 220.58977483232093`}, {164., 
         204.02890858257373`}, {204., 390.52244236415373`}, {244., 
         366.0791619935766}, {284., 346.12930984618924`}, {324., 
         328.4538994883684}, {364., 342.6784856803614}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{4., 99.48876193757657}, {44., 142.3228112584811}, {84., 
         242.5922337420746}, {124., 228.06447932857407`}, {164., 
         213.64233002111303`}, {204., 454.8484942188906}, {244., 
         431.1800900565794}, {284., 414.88940726994497`}, {324., 
         392.62602699850225`}, {364., 420.00087735957374`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{4., 0.}, {44., 8.}, {84., 68.}, {124., 32.}, {164., 76.}, {
         204., 200.}, {244., 160.}, {284., 120.}, {324., 80.}, {364., 
         40.}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 364.}, {0, 454.8484942188906}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"batch size\"", TraditionalForm], 
       FormBox["\"MSE\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Alpha]=\\!\\(TraditionalForm\\`\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\), iteration=batch size * 1000\"", TraditionalForm], 
     PlotRange -> {{0, 364.}, {0, 454.8484942188906}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"train\"", "\"test\"", "\"S mod b\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7400317201960144`*^9, 3.7400317848484755`*^9, 
  3.740032567055596*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowResBI", "[", "res7", "]"}]], "Input",
 CellChangeTimes->{{3.740033748689809*^9, 3.740033763731888*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"Null\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,126,48,23754116793535725627,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7400337646218805`*^9, {3.7400339366307144`*^9, 3.7400339470997057`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"Null\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,126,49,23754116793535725627,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7400337646218805`*^9, {3.7400339366307144`*^9, 3.7400339471547074`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"Null\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"4\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,126,50,23754116793535725627,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7400337646218805`*^9, {3.7400339366307144`*^9, 3.740033947192709*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,126,51,23754116793535725627,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7400337646218805`*^9, {3.7400339366307144`*^9, 3.7400339472397065`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
cUp/hs/XpiKZkXOmEZbkOT7h8+SbaG+kvmxfiyOlP8Pn/DeR0QZJQfn9tP4M
n4emoOMN7KNhVSco/Rk+50lB3rYvWz9tAD73SkahXBmlsjdp/Rk+/4n7z0Sv
qCtLiP6kPmei1PL/6XNE0XoSXrjhSk5jCq0n4XfTDTjjCmk9Ca9fKmJsc5/W
k/DWqA+3Nj+n9STcibNpivdXWk/CfyvIrPtwEvgZc0+Pqwf3sQA/Yz61lMU3
3wf4GXP/oUN5i2bQdYPw2esftHmGAT9jHmkrzv2eH9bnTCR4M2CDaiKsz5ko
8d0XkzwJso6Y8HNcIeKf/dGtsEuH4owP3FcXnnhxp+sZ8bk4esmoh7lordch
sVEbE0p/2zFDL85Fuh8VRFWCSX+yBbEx6mQO8tBctjLi1hFK//AzH8LOhOSg
5LLJK7qarSj9JRj1MwfVL+9atn7UhtL/jtDiO0JcOeiPotmsiku0/uPP92wU
dPrppS4RWv9Pd1U/3fXIRkuz5WdOu0X72ZNRb7NR4bvcoPVKtP5j2GIoC6ks
XDpDr5n283gdzkJtqpcDPaxp/cfaIm7bLGTvzT49aYT28zNGfc5CUwodAx4F
0foz+EP8fX3qnDYoTPSf0FO5AI2sXHJdb6Exs57sBShE+0t7M78Zs54Vt9DK
s9WC+iKHmfU8dQuVZUcYvVpB8ocJPTfcQuptNlf1V1kz6/k1H3XzyLW+kjzG
rGd6Ptq+hJs3YyFdHxh6WuQjDiknib5oe2Y9l+ajht1tKqsF6PrA0LMtD0Wb
KFvbxjkx6xmZh4645F7MEKHrA0NP7Ty0LnBJal+CC7OeM/PQn4TzNatX0vXB
aqwRrMtF90q/fLC9Sfpzccq3IzW5Xv/bR/uT8AK9XQLS22l/En68p6kkchXt
T8LFXI/qTlpE+5PwTs6RQXNO2p+EX40IulQ7ROtJeNrlmWHzHWg9Cfdt0TPf
00PrSfjhpTfWnzGh9SRczrqXJbuJ1pNwgbwN9W/30XoS/ue3+1W++7SehDfJ
P7RW3g6ed5jnXZwlczqf6DlRH3xLUZ59ccfhQm2Kj8+rALE6nZGJ+0HqxoSf
1+L1b97d08mZhpT+DD9/Kka/ymLYd7uaUvoz/JxcjF4Ivawpjzan9Gf42awY
5f0355J0uQWlP8PP/MXo0od9OqntRyn9GX5uLkK2ey8uEWIHfg4tQgm6b4/v
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
FT8=
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJw1krkzQ1EUh9+7sSXWxJboNMZfgJhhhmEsw0xQUJtBJQo7paURFY2oLIWl
QSMqKjSWKqmkoyEq0VD4ztyj+Ob73ffue+/cc17t6NRg1DiO0wQe6FIPwwI3
rnAKh1zHqSZ/whjkwQx0c68KR/ABLoFVucc6gjdwC4yT7/CN7jmEJdZZeSfe
w0VwDnOsY/gIz8MJ+RLPQpR8LBkXyPe1zgS+xQ2QT27V3Eg+wx1QTu7Hy+Dn
PK+4zdh6n7CXa5XkH0iDHy5gBHKhF/rY94Gz2Kc9kfW0sT2M421cCOuwyDqF
3/A7DsCLnFHrn4Aw/M8gbOyZEnhN3yO9e4BSuIYMVMCj1K117uu3krIH/+qe
Z6ijziAOurYPsjdt7OzkHRlj5zVAjuEV7IUt6NGzSx/reb5GanLtLCbJO8b2
JEQe0n6WyXPGznGTvGvsuXzkdp3pKfne2L7lkJv1Pykmdxr7b3yRkzqvAN/8
xn+YHkqo
            "]], 
           Polygon3DBox[CompressedData["
1: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
1ufJfGoa6iBsAFv4D4AiDtQ=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt0bsuRFEUBuAzG5FMInFJRIcXoHNLCEJiEpJBT6LQGYX7raPCAzAdjcsD
oNKhopt5AaNChdq3c07x5ax/nctee5/updW5UkiSpIMGToRF1wWKrMvXHKj3
WWFDPmZUPcZs9twd5+oyt2zJf/TmkqSHFvbkEerdL9BPn3wW0jXj2qVsjadI
/cwD2/JLSHPs32RrTJJXH7HMsDxOY/wOUwzKQ+RizQBr8jddmp386O3K87Sr
83qfrtNykTb1F6/xm/IHdZ4JVPR25HJI9x/P4YRNuUpN/c59to/HkObYr2bv
1kI6R5ynNTurAk3uX3IYz1ueoVn9xgUTciWkc8R5frN9XIX0n8V/d5rN8g+q
djld
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.368417, 0.506779, 0.709798], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwtkTkzQ1Ecxd+7V4FKKGgssSX2WJMKldCIMSOYEWMNM7LMWDprREXFF7BU
VFRUfAFLRcUXsFRUNH53/rc48zvv3PPu6p1JD6eU4zghpFGWjwIU4yPrOk4t
2TxcJyvHj8MNNESWQ2cOeslX4BqqwsfhqvVhuEX/ABbR74cV5F1wTMl4QEtn
34zhM7CazqEra0WgJvfhO8nz4RLqwC/DEtSG/3Jl/x6Uor8AW8nTStaqwU/D
P3ot+CeY4fsFTtKfxTeTJ+CRPfseHLV7HoB9qAwfhdv0zs1c/HsK68h34SNq
xJ+4MqdhlM6d7ZzBKSXdMPmb7V/BTfKkuVPyXHyA/Nf2G/CL5hyoHV9s5kA/
jMfpj+AryWNKzv5APk/+DpvIX2EIleKD9k0NC+ncw3ryW1fu9gMmySeUvH8P
/tPem5nXrGXe0E9+DH3klzDPvoX5fwd/Dbu1nCuB92jZ8zd+UMv9P+ODdi0/
/84pudsL8l4t89zgI/h/QZVErA==
            "]], 
           Polygon3DBox[CompressedData["
1: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
vcNn+I45MBfqj/19ZlbWM9hmzsz9f7BmQ0c=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtkTFOQkEQhhcGCzuJjYUBMSExMWBowAropBJCQoIJEEVQEhESQwcqKh1c
QDvo5AJ6Aeyw0wtoh50cgG+yW3zZ+b+3OzvvvVC1nW95jTFbsAbHYowH4YWl
x5gn1ibs8+yTPIZzcgP2cBPdA6fkGoRxA3IdSuQz2MV1yEdQJJchiMuQ41Ag
Z7n3l/oH3uABJ7gUdRpycItrQ5Szf+Q5XGo/9gW0J/hhABdis/p/9x4nsM3Z
Q3ICeuQQ+3rUXWjCHS4hdg6d5xsetS+uTF2Ba7fvAPdM/QJT6OM2xWb1Q7jH
7Yjtr/eMnEvjPqhn8OrOtnBR1ghsuPe4gRgzr7Mu2HfFWhH7f/Q/fbn5fGJn
0xmz7lslxfbXe97dN10B2680Lw==
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[{567, 15, 583, 12, 579, 9, 576, 6, 572, 3, 71, 70, 69, 68, 
         67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 2, 57, 1, 570, 4, 574, 7, 
         578, 10, 581, 13, 585, 16, 589, 19, 592, 22, 595, 25, 295, 26, 296, 
         297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 27, 
         594, 24, 591, 21, 587, 18, 567}]}, {
        GrayLevel[0], 
        Line3DBox[{598, 42, 614, 39, 610, 36, 607, 33, 603, 30, 326, 325, 324,
          323, 322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 29, 312, 28, 
         601, 31, 605, 34, 609, 37, 612, 40, 616, 43, 620, 46, 623, 49, 626, 
         52, 550, 53, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 
         562, 563, 564, 54, 625, 51, 622, 48, 618, 45, 598}]}, {
        GrayLevel[0.2], 
        Line3DBox[{15, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 
         194, 193, 192, 14, 163, 13}], 
        Line3DBox[{567, 733, 732, 731, 730, 729, 728, 727, 632, 710, 709, 708,
          707, 706, 705, 704, 582, 719, 577, 585}], 
        Line3DBox[{4, 73, 5, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
         100, 101, 6}], 
        Line3DBox[{570, 627, 666, 565, 645, 646, 647, 648, 649, 650, 651, 628,
          652, 653, 654, 655, 656, 657, 658, 572}], 
        Line3DBox[{7, 117, 8, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
         127, 128, 129, 130, 131, 9}], 
        Line3DBox[{574, 566, 688, 568, 659, 660, 661, 662, 663, 664, 665, 629,
          681, 682, 683, 684, 685, 686, 687, 576}], 
        Line3DBox[{10, 133, 11, 148, 149, 150, 151, 152, 153, 154, 155, 156, 
         157, 158, 159, 160, 161, 12}], 
        Line3DBox[{578, 569, 696, 571, 674, 675, 676, 677, 678, 679, 680, 630,
          667, 668, 669, 670, 671, 672, 673, 579}], 
        Line3DBox[{581, 573, 711, 575, 689, 690, 691, 692, 693, 694, 695, 631,
          712, 713, 714, 715, 716, 717, 718, 583}], 
        Line3DBox[{16, 207, 17, 222, 223, 224, 225, 226, 227, 228, 229, 230, 
         231, 232, 233, 234, 235, 18}], 
        Line3DBox[{587, 748, 747, 746, 745, 744, 743, 742, 633, 703, 702, 701,
          700, 699, 698, 697, 586, 734, 580, 589}], 
        Line3DBox[{19, 237, 20, 252, 253, 254, 255, 256, 257, 258, 259, 260, 
         261, 262, 263, 264, 265, 21}], 
        Line3DBox[{591, 756, 755, 754, 753, 752, 751, 750, 634, 726, 725, 724,
          723, 722, 721, 720, 590, 749, 584, 592}], 
        Line3DBox[{22, 266, 23, 281, 282, 283, 284, 285, 286, 287, 288, 289, 
         290, 291, 292, 293, 294, 24}], 
        Line3DBox[{594, 764, 763, 762, 761, 760, 759, 758, 635, 741, 740, 739,
          738, 737, 736, 735, 593, 757, 588, 595}], 
        Line3DBox[{42, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 
         449, 448, 447, 41, 418, 40}], 
        Line3DBox[{598, 853, 852, 851, 850, 849, 848, 847, 641, 830, 829, 828,
          827, 826, 825, 824, 613, 839, 608, 616}], 
        Line3DBox[{31, 328, 32, 343, 344, 345, 346, 347, 348, 349, 350, 351, 
         352, 353, 354, 355, 356, 33}], 
        Line3DBox[{601, 636, 786, 596, 765, 766, 767, 768, 769, 770, 771, 637,
          772, 773, 774, 775, 776, 777, 778, 603}], 
        Line3DBox[{34, 372, 35, 373, 374, 375, 376, 377, 378, 379, 380, 381, 
         382, 383, 384, 385, 386, 36}], 
        Line3DBox[{605, 597, 808, 599, 779, 780, 781, 782, 783, 784, 785, 638,
          801, 802, 803, 804, 805, 806, 807, 607}], 
        Line3DBox[{37, 388, 38, 403, 404, 405, 406, 407, 408, 409, 410, 411, 
         412, 413, 414, 415, 416, 39}], 
        Line3DBox[{609, 600, 816, 602, 794, 795, 796, 797, 798, 799, 800, 639,
          787, 788, 789, 790, 791, 792, 793, 610}], 
        Line3DBox[{612, 604, 831, 606, 809, 810, 811, 812, 813, 814, 815, 640,
          832, 833, 834, 835, 836, 837, 838, 614}], 
        Line3DBox[{43, 462, 44, 477, 478, 479, 480, 481, 482, 483, 484, 485, 
         486, 487, 488, 489, 490, 45}], 
        Line3DBox[{618, 868, 867, 866, 865, 864, 863, 862, 642, 823, 822, 821,
          820, 819, 818, 817, 617, 854, 611, 620}], 
        Line3DBox[{46, 492, 47, 507, 508, 509, 510, 511, 512, 513, 514, 515, 
         516, 517, 518, 519, 520, 48}], 
        Line3DBox[{622, 876, 875, 874, 873, 872, 871, 870, 643, 846, 845, 844,
          843, 842, 841, 840, 621, 869, 615, 623}], 
        Line3DBox[{49, 521, 50, 536, 537, 538, 539, 540, 541, 542, 543, 544, 
         545, 546, 547, 548, 549, 51}], 
        Line3DBox[{625, 884, 883, 882, 881, 880, 879, 878, 644, 861, 860, 859,
          858, 857, 856, 855, 624, 877, 619, 626}]}, {
        GrayLevel[0.2], 
        Line3DBox[{57, 56, 666, 73, 55, 688, 117, 72, 696, 133, 102, 711, 163,
          132, 719, 207, 162, 734, 237, 206, 749, 266, 236, 757, 295}], 
        Line3DBox[{58, 645, 74, 88, 659, 103, 118, 674, 134, 148, 689, 164, 
         192, 704, 178, 222, 697, 208, 252, 720, 238, 281, 735, 267, 296}], 
        Line3DBox[{309, 764, 280, 294, 756, 251, 265, 748, 221, 235, 733, 191,
          205, 718, 177, 161, 673, 147, 131, 687, 116, 101, 658, 87, 71}], 
        Line3DBox[{312, 311, 786, 328, 310, 808, 372, 327, 816, 388, 357, 831,
          418, 387, 839, 462, 417, 854, 492, 461, 869, 521, 491, 877, 550}], 
        Line3DBox[{313, 765, 329, 343, 779, 358, 373, 794, 389, 403, 809, 419,
          447, 824, 433, 477, 817, 463, 507, 840, 493, 536, 855, 522, 551}], 
        Line3DBox[{564, 884, 535, 549, 876, 506, 520, 868, 476, 490, 853, 446,
          460, 838, 432, 416, 793, 402, 386, 807, 371, 356, 778, 342, 326}], 
        Line3DBox[{59, 646, 75, 89, 660, 104, 119, 675, 135, 149, 690, 165, 
         193, 705, 179, 223, 698, 209, 253, 721, 239, 282, 736, 268, 297}], 
        Line3DBox[{60, 647, 76, 90, 661, 105, 120, 676, 136, 150, 691, 166, 
         194, 706, 180, 224, 699, 210, 254, 722, 240, 283, 737, 269, 298}], 
        Line3DBox[{61, 648, 77, 91, 662, 106, 121, 677, 137, 151, 692, 167, 
         195, 707, 181, 225, 700, 211, 255, 723, 241, 284, 738, 270, 299}], 
        Line3DBox[{62, 649, 78, 92, 663, 107, 122, 678, 138, 152, 693, 168, 
         196, 708, 182, 226, 701, 212, 256, 724, 242, 285, 739, 271, 300}], 
        Line3DBox[{63, 650, 79, 93, 664, 108, 123, 679, 139, 153, 694, 169, 
         197, 709, 183, 227, 702, 213, 257, 725, 243, 286, 740, 272, 301}], 
        Line3DBox[{64, 651, 80, 94, 665, 109, 124, 680, 140, 154, 695, 170, 
         198, 710, 184, 228, 703, 214, 258, 726, 244, 287, 741, 273, 302}], 
        Line3DBox[{65, 81, 652, 95, 110, 681, 125, 141, 667, 155, 171, 712, 
         199, 185, 727, 229, 215, 742, 259, 245, 750, 288, 274, 758, 303}], 
        Line3DBox[{66, 82, 653, 96, 111, 682, 126, 142, 668, 156, 172, 713, 
         200, 186, 728, 230, 216, 743, 260, 246, 751, 289, 275, 759, 304}], 
        Line3DBox[{67, 83, 654, 97, 112, 683, 127, 143, 669, 157, 173, 714, 
         201, 187, 729, 231, 217, 744, 261, 247, 752, 290, 276, 760, 305}], 
        Line3DBox[{68, 84, 655, 98, 113, 684, 128, 144, 670, 158, 174, 715, 
         202, 188, 730, 232, 218, 745, 262, 248, 753, 291, 277, 761, 306}], 
        Line3DBox[{69, 85, 656, 99, 114, 685, 129, 145, 671, 159, 175, 716, 
         203, 189, 731, 233, 219, 746, 263, 249, 754, 292, 278, 762, 307}], 
        Line3DBox[{70, 86, 657, 100, 115, 686, 130, 146, 672, 160, 176, 717, 
         204, 190, 732, 234, 220, 747, 264, 250, 755, 293, 279, 763, 308}], 
        Line3DBox[{314, 766, 330, 344, 780, 359, 374, 795, 390, 404, 810, 420,
          448, 825, 434, 478, 818, 464, 508, 841, 494, 537, 856, 523, 552}], 
        Line3DBox[{315, 767, 331, 345, 781, 360, 375, 796, 391, 405, 811, 421,
          449, 826, 435, 479, 819, 465, 509, 842, 495, 538, 857, 524, 553}], 
        Line3DBox[{316, 768, 332, 346, 782, 361, 376, 797, 392, 406, 812, 422,
          450, 827, 436, 480, 820, 466, 510, 843, 496, 539, 858, 525, 554}], 
        Line3DBox[{317, 769, 333, 347, 783, 362, 377, 798, 393, 407, 813, 423,
          451, 828, 437, 481, 821, 467, 511, 844, 497, 540, 859, 526, 555}], 
        Line3DBox[{318, 770, 334, 348, 784, 363, 378, 799, 394, 408, 814, 424,
          452, 829, 438, 482, 822, 468, 512, 845, 498, 541, 860, 527, 556}], 
        Line3DBox[{319, 771, 335, 349, 785, 364, 379, 800, 395, 409, 815, 425,
          453, 830, 439, 483, 823, 469, 513, 846, 499, 542, 861, 528, 557}], 
        Line3DBox[{320, 336, 772, 350, 365, 801, 380, 396, 787, 410, 426, 832,
          454, 440, 847, 484, 470, 862, 514, 500, 870, 543, 529, 878, 558}], 
        Line3DBox[{321, 337, 773, 351, 366, 802, 381, 397, 788, 411, 427, 833,
          455, 441, 848, 485, 471, 863, 515, 501, 871, 544, 530, 879, 559}], 
        Line3DBox[{322, 338, 774, 352, 367, 803, 382, 398, 789, 412, 428, 834,
          456, 442, 849, 486, 472, 864, 516, 502, 872, 545, 531, 880, 560}], 
        Line3DBox[{323, 339, 775, 353, 368, 804, 383, 399, 790, 413, 429, 835,
          457, 443, 850, 487, 473, 865, 517, 503, 873, 546, 532, 881, 561}], 
        Line3DBox[{324, 340, 776, 354, 369, 805, 384, 400, 791, 414, 430, 836,
          458, 444, 851, 488, 474, 866, 518, 504, 874, 547, 533, 882, 562}], 
        Line3DBox[{325, 341, 777, 355, 370, 806, 385, 401, 792, 415, 431, 837,
          459, 445, 852, 489, 475, 867, 519, 505, 875, 548, 534, 883, 
         563}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1:eJwUm3k01G0cxSWSNbJkSYoUEiJF4Wvf9y1L9uwUESL7ln3fIhSikhSlQj/7
MjPGICqklKXE/EqlLOV93nP6a44zjfvc597PHTOHXC+Zu9PS0NAE76ShQf9o
BJu7Re78wbHA9fP1kp9MgF2YzmTzQQ0o5jdHnL6OYyGN3+JTDmZBZXCQ6Piz
XkjgKObJWVzBAnM193KmFINshamA0IsJuJQ4JVu3imOGI6LbXlzuYDz/dlVX
6gFIJpb+TNfHscELFBOaaymgLx2Y7fSSAJouqsN6sVSs46B71nJBHDAkjd3c
YzEGbXNcyibzOPaKHPJ151V7KO0vWBqpbobCPbbRNhdwDH7e1YqYD4aqOw6P
JccGAJdk+ZUwTsWMxGkKOS9agee/olDdAyNArWdKeDKGY3vl7k//SjeB6AKu
5/YFL8DVrtkk+BKOVfeN7fFXtobyxE4xtW/9sC9SwHfHBhXzJV6dmt59DhL3
74ixZaPAZ9ZfbOy9OLbFHUknJqcGZ/A5Q+7al/C72cRS3xPHcPG5M+dt3cBL
A/azlAxACgu1/OcP9HvxXHruUuIG3zAGkSolCvCxHeeFJzh2P7Xv4uMFdRAf
bSgpVe2EX8lJ0smOOPbruXQSd5YBdO0WVpjRGwSOC5jxIj2OGchUKU9TxWAx
aojpp+sw/Hz+I9+sGseaglluDkeegYNiOkr3eLth7Oqpzr/ncAz73Udjq28M
9+Scb2gSBoFLOiHpxW4cWzkT8tDCwgIUGMbOsJ4ahobLpjqTuTjWlxDjHiAq
D2prM39kxnrAa7M1nMUIx35+0rI/V2UEokFfXhSWEiBM/KlF018qdoadNuxr
gxcA/46avx+HYdcvAaM38Tg2doyw5tx+GigrRQJ6cn0wouVoRxLDsSvx0z8I
+h7QIVFmPHd4CO4vHs8/8oWKPV+ty18uCweLG1lydBkUYDR66czxC8ck+ml7
+TutIUZduBu7eA8MbYy/pF7Bsbqckvv1mRnwZGfnjM/5fmirqI8YerSC6WuN
dR+vKIT6qJ6tq8Ov4YlcQurdZRzr3aucp2HgBcp9TPVHsh/BbpUFXzlpHBMt
c0sO7k6GTUMNJvkHJHiq89XypiEVe7D5/rK0aCy0Zp4xupj/CjxffAp8PY1j
3kyHHS+vOsDGyzsiexpbYC5/7WsE8vOo662mnKXLENXiKMxFIIBAsadlzy0q
1iITyzl91BBKzrFf9I4fhczKDi6jIRzzxLRi2MxN4bL+UZaKS20wvuKToHAe
x4wb27ictA1g8qTtaFToIGTd9nwc1U/Ffjj9qTWUtASD/UGZAnEjINT5cJOM
fBgeLr8QUKwKXB66rleuvIQE8pvYLXTuYodVIr1+ukBVnecdJnTuvrPp2uwv
qFjj3T9u+SWuwKvCbuP+fgTsOB6nsWA4lmUvM9RyWQ3EaFuCeHk64Eu9nfCG
JY7FtKf0bvaqwdm23olaOgJkWC9V7hylYnnc34ZDuYWxT+uKi3GnR6BctvPq
2lMcy9BlL7pDOAsP8DjCFGsnOJJOOW+i58FYOHSD7urD6TvHLa6j5/FYqd1a
Rvf0PD1LoHu8KbwjGQs5C4xAmnPczi8PceyfRbOGqIg8+Kp0Ng1PdsIhWeml
P6Y4dqd5pSt4SRf+jo49sjIjAHfz6gN2pI8js+2a8ndv2Fsa8/h9wgjsYFxc
57qPYzsPVUzvOC0PNBkBRh9cuqC2jbndRRDH+B97+u+96Qlf9LT7o+aH4N/L
CH3Ze1TM4Xy72ejnSGhU27rZoTcKTeQ4PTuUezR/ZrtH++OgALNce9PdC2/G
E7j+NOEY90nl1GPqyWDBdII/3LoTyKaq5+af4ViBcHl4rUYSsERtHlTo7QD5
7Z9sLZE4pqpzIIk0kQXLRo2FV+/0wbiXqtZbb/R4s5lMT0Y2qJ1vaLhuPAAb
Fksfs5Buwx8dWXOkc6DibnPXz1+D8PeIofKUMo4tUL3jOik5YDBRSqwsI0LG
EZ6pVlEce83fpKYfmAuV36axS+pDYFjqHSzLgvLT9ADTQY48IPvsu6G5SIZh
94+r8J2KFU8N3D3dmAcHWYalY7UooDmfFTj/ioqd+1NGk2ScDw84Ejj7eEZg
5cA7pcMtVOznro+0NMv54HLZJct1cQQ8hbxG/xZRMfEDA603rhdAfAdFT7dl
FORLBj4EhVKxTsKKicHhQrhR1LTplTQGcWQtnetWVCyke2Z7F1YIhYnVQU8t
X0HfTAS3siwVy3BMlei2KYJuSdkSYeFxiCz9lprPSsVe3mg0ufK9CNi5OAMq
qOOg826REpuBY07ebGe+XbkEWzft5l+b9cItI2iWQjkm7NLOIW8fD5PrYUFX
JnugpOqfhr0qjnVrdf0T80wF/7qjc1VXibBLil8j+DiO5ahigsNM6cAjsdHf
0E+CIV4bo7t8OPbdx8189UEG2K4xfRbmJgPzmxTCBh2OxV25kB1jmgUBFMrI
d5dhmLLbd8obp2KaZUkLclezQTvod9qucxQIub954NcbKjZUu0BD1MuBS6uH
JJq2KPDDtf1oRScVK/l5oWiLLxc+FWzl/741Aqdx111ed6nYZHxLA/YlF473
DVSRtEdB/b5rgmk2FZNViDFjfp4HGyERJ499HYVaYmaUbQgVO96VnzORnA8P
hbolWbLGYET471y8PRUbrNBK4bUuANM0lggv2Vewp2vpBQWo2Cap6vyASCFY
nkjapzj+CvyiSnnURKjYcHfPmXffCqFm8BB9aOg43HWRPzRBj/LHh87JuL0I
fMl55gJ8E6C6KOsppYn6om8qUkoxBSKOn2wYPEkEDRFroesKOHbqNcvF0s7r
sLs36jn7bqQnfG9JlsSxIuU/kc/1rkPdQ5kO7ikSnAtQtDh+EMe+kBlvp44k
w5Ebb8XHHwzBx8LLPFc5ET8MtI2w2yZDY3+Mk0EMGfxYqOK+u3BMOiyGwfhD
ErRvvCEGmw+D8lHG5zvXqRhPRZmqpmcSmIi+WDmylwJK0cdW1b8i3dK4I3+t
JMInPCLqSzgFXL717BJ/R8XWv2dhbsGJoD5QaxrziQJB9gbHnpKp2EbqSdac
jQTgq/9284vBCCiLKhQtYVRM4VKef3RMAliaOd8SaR6B68H0iX2NVMxFNXlJ
ZlcC/HscUCS5fxTYpY/J6qP8VxTgza5Ni4djcaIvaRNG4d0TgfdXcqjYHRtH
v3n2eGAOE7WqRucYViRnXoj8zDcawNzBZQ6CxUwcOsjPPwX4WEMckM8VhNr+
JV0B0DGyGzg/CA9Obt0jojwcsfl1Uqs2BHSTCnBjcwLY2voRazVwzLq/4o5x
fygM6RGvJ+kQIYph9AbTKRybMBSP4VoMg50lb5K9lUgw5yJk8PMoui87k05k
7woHq65q01WZIbBLJ3O6I/8/OLVXslU0Av2/sXoComSY8Hh/woEJx2KtOT5l
al6DqEeFUzO8wzBX+2pxGvGSzowkic4tEngr654L7KJAsXVj5NwSFTM58sOJ
JzYKRh94dGRFUyC4GlcNnqRiKfTW/O3l0eD0/lDbwB8KxB1NSkgfpGKVxfnK
6w4xcPb2mS/dgSNw8cqbyuPPqJihiOlOm+UY0D+clhS1NAIaB5/+OHeHis2d
XLgdGh4LMr1l479cR6GY2+IDcz4VS2xK/2S5Ow6Oq77jPzo1Cq8Fb4htF+LY
dY8X6ty3A4Al1JDjr28PHF9P/9DkhGNuqoKRu42Cof8pNCXJDIKP5NxjZdSn
43uzcmqUggDWaq8ceD0Iq2WNbVnGOCa7vWLGLXkZUsgz/lmRBGC7a8N2TwvH
DlyYTbcTCISY+v3vXosQofSM//N0JZQzpo57w5gCoN9Lin5tkAi/nO5STsvh
mMZ9Qc/ZVX/YMZog9vkSCezGv3veF0fcknQ5MZPiC3UnNFPruYegJcoyf1EI
9XuN8ZG/D7xBj2BxUa11CHaOMvgtc6PevMq/KpvmCfuN/flqnMnAKeuz6wUz
jrmkz+bKe7lDp6HkyDj9MDCc2XHNdAeObfsdbGbScoO9RYLTI/eGwXA9bOHh
GhWTzM+lfXbIBVYNFjuIRymgdbDK+Q26R57naGySthxA1/Ri4l50j54Lhuwi
fKBih7P3vXR7YgsiXHHOSiQK1BaEONDG4ehcXr660+sAylZttUnn+yCBWZbj
aD7i/+a60modS3jB6u/i09QDLpuc19N9EB8+6JQ/dsoaTIkC9AHWAzDVqbBa
4IJjSlwxnuzi1jBE38VIYBkEOeU92HkbHJscWVToE0CPs4Sr/+kaBLKbJe0s
Opd9fpZDhmzWsPDui+efMAKU2lwcEUbn0sdpoVdNYw28R4PkBqSIoPPRV0P4
LOJV11ujpFUr0A0zcHKfI8JC/87A9zLoPjJIZvfNWYGKf/6doRISOHPmB9sd
QRxux3ovZ8IK9MhBvf+Mh8BL8ZBPngCODS2k6UkNWIFMzbGrazvJKJesLqWy
4xjlLW9J2XMriNWUjXn8jAxCp6KqAPF8g6txz/Q9K+AD/Rsy/sPwhC7zaBPK
sRfbK7+ppVbw5YiRZgs7BXRO8R6YX6Fihc9mXMbSreBG9sddT3woIMhrdn98
loqZah87kRppBSWZNKHZPRTosTm/leuLY/b6fu1NWtbA98m+SFFtAOj7rJIT
0G76vJ1+44KlNdz3MAtvGxkApvPLRoYoZxSeDDv+cbWGXLV7NCKug/DM8qXd
khXik86qpYuB1pAu/XW33+ogOP9if+6IdE7h+XJgINoauhpXAgvjCMBiRwm+
q41jige/T+/MtIbq7EX+W3uJYHAm6wZBBelzI3qXcJk1aPtc/pR6G+VSbdLp
LpRLaV7ESOF71jArnnffXJYENT0FttlS6J66RIvSP7MGprROi9+dJHgRqrZH
HulvJdT6YbDXGpTy8LZQsyFI5Wr2bERcJ9jDmRcwZg2wO2dg9MMQiOxov0yL
7oVle/7B9Q/WsPfjbRuGADKMW1BUjyEuGovt8HejWsNyy2MTrm0ydPvs+iSx
E8dsDXKcHm5aw8rRhew/GcPgmxCsu4R2R6SbRNQ/GR3o0e2i7PbsB9NM8ZwM
xIcM530mHiY4gJW7DPzr6wWpqK0TlW7o+RPMufJY3GDul/OukE8DkDU/bbOO
OP9b50q4c7wreO2o79HyGoQEgVgZaWu0Q7ndUrg3XCDl53TK1vIgHHO526lm
gmO5FR2HmwJcYFvsfXBJIAE+XMngPqGLY38Fr8qeWXQG8bz31QJrBBgNmJb/
izgnYtWx+L6DM8w8MVOMCydCR2Gb5B1FHPuopXKVvc4JKvN/mpH+EeHhMSKd
pCyOUR+EMd/Od4SRqtds63EkaFPdP5gpgV5nFecT1lgHID51ymZgGILdUWcS
ycI45vvKUNPK/zwUfjX4vZaKdtznI1pf+XFsaZ2aHG5rD9t5Ly70sZFhtNqG
e34vjvF06JhEa9nBWwGpjeBcMnxraqNtQz3CcVvQx/2ELSgu57zdwYP248Mn
/AG0OHapp6ZOStAG7A1A1K9kGPSf8Qsu26FzrxIv4E8wgjZ9PqDLGQTFr6VR
roiTi8nr391iTeGw0IowDTsBYnzs0p+h3WoWEuXXrGoOUl6N5nOZBGh66GhM
Rf4sUVLcvbVtAQVqYoyNrESwvso9tBPpprksxKmAWcE0p2WsazoRyHdNONYR
zwxFck+5R52DgszAtQ0mEuiLqB8mn0A74tvvB3HKtqB1i6Y6LIUEdyoT98Qj
3SaFG96mbdmhXd3fO4l000jjebdPBHH4I/n6qNbzYG09UXQwaQgWhiyL0lFu
PKQ0BtmEO4JER5q1Hh0ZUqt36s0i/lHlPANp+52B9lSximUcGU576/3lRr41
s0xlndp0hnkV2gxVmmH44PAQk0BcyvvijCH/lAssm0hEs0YNw8mgQ2VCW1Rs
YHTpts4LV4h9SjZ/sTkM5Q/6dS4jfwqLN+2VOe8GbortF9kXB+DBXZ6mEOTP
k4IXFCRc3CCrR/Kl0eVBmLNIMLZEOVD9aeUOi4cbaB/+8PLS30HYus5wmBnl
wCU2M4vXPm5wM9LD/8p1AminHlUpRTrvm52TTb3kBs2lZX0OnES4RN6spQPE
1WXnzooGu8GhU039R8uJwDN0zF/nNDpfQoNrXZgbKMjLXxwVI4FwL7XEDe30
liidCs5IN3j9g/XZ+SYSjEUyn7VF3JJdMbHoEesGVlFZVb3KQ9BM+8ZBDPXj
CWFvuduJbohXw6RZBobA1E6RfYQH7W7dC1d7U9zg9s4tO2lzMrScrnK2YMOx
H28TH1Ey3GBHcY+o1DQZXt/Z5/gQ5TPJbm6sO8cN7mf/zWLwGIbnTUd455Ge
Kir4m/ICNzh679yNF/gwTIo8FTJGedth6ULPrKULB3JzVj9rD8C8I6dE1DXk
T7HAqyXLuhB/H7C+133gpP5m+RDSc0X/0ECngxH4yhWEle8gwMsUBfJvdN8D
UmsETrQYADtLaIfPBQLM3BAUfqGPXv/rvwwp7PoQxhfPJtZPAJ+NkmUv1Gsf
Tj3nIXrrwtfhZfoJcSJ8fTd3gg75efFs9cifLm2oc9vWC0Z+xg/araWdwbEp
tZ4uzv1aMLF0IIoWJ8J1xXAVGnkc86sxDxa8ogEC0YNaMWYk4JBcYnNB+ptv
tQTsI6vBoGOx5grS/1xUkF8D4pNlg2T1nUdV4Sar2gE9niHgkqA7/xn5/GXk
6ueebSVgulIYkheGuCWz4SPbAcQ/TWRh/0eKQE+X+p04iXLb9S69MC+OBTlm
6tK6nQJdsqTcqhIZjlaZEA6h3OA+YhCQzCUHrPcb39NXkMEs8eApNuT/hyeT
nbfTpEHRwrt0145hMPomoXfVHsfCpqX3ebfrQ5fxeLts0iAM9mvMrSKdtWM5
lha19SD6GXf+7PdBSLpVq2uF+Fn/4ZUyI4oOJLmLiEQ7EGDynkdEJdLZxfIj
sdRWG2riNlaZBgnQhfXEvkJ7R037GM+rj5pQwdSSloD2jqK9ost31Gv3TP34
/vhqAF184ZWvFUS4mnRJ6DfKjTS1ncGMv9Qg/tm6AjCTgL1fq2se5a3uj5Qe
xihVSA33cIwOIcEnZrJJO9pHt+9VWvxiVQFV65SL92dJsKfEiByJ+i5woT6x
VegsdJqeXu0yHIIHq0qaR9Fu+voz3cH7hAJkV1663NsyBEF9Os+eI27/EfmO
j1ZDHo54OIQ9FiaDzivDE/IoTx5Ghq5ft5SFu262GSkZZKgfd3hagvQMyR8I
oSVJQX3T1zP6f8jwl+b8qdeOOCbV6zSve0oXePLG0uo1BqFAecDoeSCO9btP
y2/z6IHGlta7ax39ILyz52oF0s1M7xyTzpYRTC/RGfEg3Wom5U+pohyw+UEf
uqfUGN60HLxhxE8EkTOJL8bUcIyOVymbpGgCj+kv64X7EmGWKshop4xjScHG
3yPfmIAxi/3RsjYiULOuHR5DejLEkG/knDWF1rd6NE2sJLh9VWoPnEQ8/EFv
612qKXhjzypfOpLg3cAI8Sby7R/y+JLIpCmcwKTGXz4kAbc1twOO8tm9TP6k
m7gZKP4BnyaaITjc+KxXDum8e0buTmmYGTzmzJQsQ1zxiyd9t+8hHDv29jbb
UL8ZRDwa+Bx2ewhWrgSIFexHei6fP/ubxxxSXz3w1fsxBAccz4k93odj0xua
G3we5iBjwhTHqkkGcxoN5i7k50Nj2nzyT8xBUfrFn558xCFHtF/1sOLY/dJz
Hrp0FkAWv1t2aZ4MIddGtxSQbxk9d5C/lRlD1Pl7Hh+2ByHnwxyNIvKtcNer
ty4yJiChN9Gb7USAu+yaD48YoPvupPusq9sE0jUKOOQw5FuaOmZapH8a7VRQ
yjFT6OC7/avvABGCFj/zEVE+xAjr/BC7Ygo/6kiChlFEyD25/S4W8XDEv/oS
7KUpmL7akO96hzg5eef5I4jTHiw6HDHabQaZEeJLYsokKK+SKn6GOPnE8DOb
ETMzkA/0X4guI0GU59tChWOoR3Ye+2ZQagYxAT8n+jZJIIRdO39HFPHGV5n6
tjkzmNm7y+uv3RB8LX60sgP52W7A2lBEyhxYe+m0RV4Mwds3MiYGiCuafRSz
o0PNoaf1oqACHxlOGYwlxnEhfv6ZdHqkwxyoizM3zoaRYb4wp7AW5blL3vYO
XiYL8Fhi9T3+mgzWai4SUoh7U0m0vl4jOrBHaoOm/s0A0Hl3u55CPbKj/Jqa
m6sHhK7PpqzBEMi5DPc5HMYxMElgjk/3gEdEpmb9gCHgnboSFoP84LpzorDi
qQfob9WU3qgcghMnTcPKUb5J2y++ffbBA24f7ZBfoAxB2dJ6Xwvq9+cW0kQy
kyf0tHiGHt9Bhvtl7O4klHt5RkdcZk96woPlequAE2QI3n3SYhrx6g4u7dxv
jp6QOnert8GFDI7Mu3IXkX9E5xittq57wlqVXdvnHDI03pIQpu5B+gdTK+ia
PEHpwIrUgS4y8C3o0H1D9zpnI9Cb8Z0nZCsH7jVZRfzAsUtxhRHHOOW56pgY
vEDvK835COFh4Lu6p3N+F45xBVib7z7hBZy8z2iqzIdhMJv95lvEw3czWh1p
7b1Auqf5V2/cMHQvtgwN0KCcZxno/pPgBSUM+2TmHg+D9IFVPw2UA4a71fDf
oqZQ8/amIXGYAB1Kl68qoZ46YkNSu5NoDlF5J/Q3JInwrruK4zDyYfL6Gznz
eUt46nDMVSCVCGz1QoobqKfa25QI65rn4FW0ibbUIhFenyz78RL11OhEG2Np
tS3kaofUyWqS4N/UsuZl5MNbbpy/5ejOg+tM+hmxWyRwsaQ9wYV86Pf5Z2GX
myPUHS9sYPtHAt1rS63VyIf+X5lCb7s4Q13D/afzyIeqFpQvIsiHQruLY87n
uACv3j+6ByhX4/DNlznIh7EnE3zYOl3B+9hrgwtcZKBcHgUq8uEunjOnW765
QUVVsTJzIOLbf+MBiuhcOEykv1gddIfJ3y/Tbw2RoeBujXUQ0j9cdTHui4kH
eKjMfj0iMQwLl/7+KkU6rxN+7QqM9oTL8o9ZS5OGISJr2e+MDo4lvB9yT73g
DO73zUL/MhAhm5+QG4PyasSdmHAtwhMcJRQCaFAv6Gk8OOGE+HyGhVScV+oN
hnkNyZScISgmlb+TQ/5soCvPv9PqC09w8edFr4dAUtyj+B/qi5y9B4Obp/xB
Llfok5UgGWhtX7lhyIcFk1JybZuXICKZZY7JjQwDC91qIRyoX1TGPGZYA2GT
eOXG0zoyyM3znhRBOVaz/3HFpOBl8Iv9PGdDJSOu71Dq241jwzsOq48eDwLb
wxu3vssNgxxPk4MT4lVpHgFSj3IwJHbqNsZcHQZ8Cy+mblMxnsj01kdGV8Do
WASVHhuGyqex34I2qVjt4cDMYocQCC6qvKlKS4HO0QgPfI2KsRf0dYX5h8LQ
3N0z64cp8N56c8t5lYq9xLImzCLD4GvDi/Z6HQroth55OoB2dBJ5XEck4yoc
+qnAY492dJd38YO4IJQzuie/0DbEgkr7yeHVvH5Qd6/8fqEG7dCQHdGvvJPg
SiDXnnFqF6wdFySW3ccxyT9d/DaXEiHy0D7xRu0uEF1dYlj3xrGDfwtDm6Qy
YbbnGbnPZADM6o9+FkE7JY7j4s5mgyz4COGvNhDv2Vy/okVRwrE1R7GOPrls
iI0XrQlsIoKZpXvWP8RRHEZxPtyd2ZC2tm+G+cIQBFga+z1E/nG4Q4puNcqB
t1qjAvc4h2H6ndfzT+j3+vMbMhre5oDKpeYYHhcKpKaPp5ZRqNhozbDM3IVc
iOP7V/Hi9Ah4/Mg+NvWIitUfeyRgjufCZCb/8CPWUTBpshC8lUPFUs++56KG
5cHzVx+ilz+OwpvvjrzfLlGx9qCizQc78qFU3fOUfcsY6J6SZyYYUjEG75HB
5JR8+PqoLZ2a+gp+YcB/QoyKyfc8KAxkLwBtrbJTRQ7jEB3iXHGUlorRnJ4u
diksgLQlPnpt6QmQuRUg3ji5gkly/BYzFiiErJdaS1+3JyC3znMBD0e5dJX4
fproB2fFxYI+/+kDtdPx6sZROLYV3+nA7xUHLIKnt87W9QGj4fHPvCi3DW8n
3ukpuQ6RJpEN/L5DIBChYpOO7qP0OS0JWd5UMOCJtiO0k8FXoTGfa4OK7TMr
1jxYmAbeL6MPf2agwG0vHt7Hn6iYU+/CSiRnBrx3ca/JbKSAPc1aoDuJiqWM
Rhw8k50JLypqBEZsRuBXAaYt3UzFxt7FrRzalQ0n891+19KMQrRlrwl7KRUj
VaVx9HZnw8BxkwbmulF4ZixpzxhLxd5gr3b+i8kBrgfdbT+Nx+C57FsDAQ/0
ehLIZj3KuTDoO3/H/tcY8LrY8OnoUzH7I4LZezZygTX35bpC6Sug+nYOZxyn
YprvXtu/fpIHn1zsDBNVx0GerjDr2x4q5nerz54zMB/SOmZUFefHYdmhLCPg
+wrGK1Ou1nqsAOzvVCUapUwAN/eTvXtGV7CwFUVi33wBSB3QnXgh+RoCjEVf
0YghLu3XLL8UnwyG27XRKeJDIG01afAG5WEn7YLKJHsyyG9/6jzHQIZDgwc3
DVAOpLiK7vlxMwkua2wcfz1Hhv6XGqzn0b3u+HVSuE0iCe49lMrZ2TUMAS1m
j3Z/p2JHJoYzT7ckQqOXo4OfCQVC5vj5zT9SMQla/kueGokQXM6qcredAgLs
0lEKY1Ts0dvoD0bDCVDkUWH59NgISEtO7WvrpmLbagU7V+wSoHnmYnpOyQiU
JB0RfddExX4E/9zUXoiHZT3bUQWGURCpHl4sraJi49H7vzkExkOwz3uue8Gj
0NGpW/Mnl4qtXzFhPLkVB59eaGt+mh2Fwa2mOz/QeVXZBwQRk+JgPu6F+Ud0
XgnC7xUyAqhY3NCH80c44mCzy+9kTesYZB+F+l5HKqbu7bimXRoL+OrT9+Ji
ryDObZcwfxzigczjE3oMurB1k7D/kV0f3F6ebXuhjmOykRIWcvFBYBk4z2lp
S4SZClvxcMS3e9fGNsrzgiFzzP7WJxsSOL/rc32C+quXc1ZhuOoKZJaxpXLb
DEFb1ptKP7Rz4y6+12lvCgGjWjqfT9ZkGJwZPVSJ+v3Ew1Nurt2hkPx0+b22
1TBgI+kSpig/43Rb+ltGw0DKbbSvTJwCnw/674qcp2Jb2uLNT2evwosy53S7
Ogo0nvJgOPqKiokLTXnbfAuH1bmUgrdHRuC+8/dE4y4qFuIic7zwXwTYcpY8
56kZgS8yjLM/HlKxxTMy2t4skaDIGTXKJjIKNuwiUftuUjG2e5w7iHxRMNfK
3v6ychTYdooNPk+hYhkmYw3NR6JB8ryFrciBMbhZ4Xdy6goVm3CeHM3ii4Hm
leZUxdIxyD9Tp3DNhYodr/laGVcRA65z5gr/9r2CvDhTb/F4HHsXK1HcN3cR
ligjv4PU+qB7AXu2A3HIoccyjNkWlwHTNivslCbC+A5RAj3i3sGY+jetWoHw
7OK7dul5Ilhmafv1I67YfefsyJPTAcC5V+iv7w0SvBY/9lT7/10mmHOd1uIi
DHDxsgWbDEFBYlxHPOK9cvI6o8YpPyjQfnBfi44MaT3VNVHsOJZYrkyR4/OB
wfyXOTPPyKDamBN7mh7xyfhU8tSmJ9jLQqSS/zAwvsUDG9ap2LV7NB9UZ9xh
6+2RwgZ2Cvy+wVz4f873fVdJ9elwg917jkhXoP66uHuC7fUsyvNivTNOt13A
7fvml4s9FMh68enf9XEq1r1ia2Cw2wlGFjpq9x8YgUvJvqnrA1Ts3489DClE
OwhdMdevDR0B9QNar8XaUF+4pfImZlqDzTWXZtaREbibssiyD52j9vXaVUMz
c6g4d3XQWGIUvtU/+5N8DcdutF/Jx8rtoXP1sdLziT6YUhvlzUjEsbrFE2dt
vxkC/vOGpBVLHzCdleaztsax7oP+nhKmBpBh/FfdZWkQ7oQozueg/aLIPvP5
kosBlM7qdDi1EIBLL1/yKuJDG8JrUf/LBjBW5JUlkoB290oVCwviQJfI96RD
8QZg/0DL/64pCQIkI2r0xXGsKa4xMyPPAFTSN/ZR96Md5zHJJy+IeuSA2oHG
KgPIm9ppQv08BHs8pLKI/58LR79MSpMB8Mf4jt1pJgPbn8zjbIhPtujaInm7
DSAw5acnVwziFut2ob/ovqR3zr50GDWA6/FVn0tEKVBjKZxX/IWKXQXtRptZ
A+D4wPqVJo0C6edJLR+mqNjdJB12xm8G0DzXVKH8jQL5Mv4d40NUjMulqOLi
PwM4vqHhZ2w1AozXzn0MxajY8xmVQykshnCO8WnLiRcjgEles+pvRPlz75ad
Db8htNG5LM0fQPq7qXE7n8Mxg+J01rf9BhDk0ZmoMjEI0WXiAunGOEZzZ/76
9wZD6Gb94WURTQBhF9LzKOT/LMXUmvcFRhC5pKwOYkSoaHlPq4A4RP9f8ELl
NWPoeeavQjNCBCYJa8Znsuh8e+WGZd1MwLfuW2r+VRJoWzjO/kO90HF0O3Dw
sClk8H+22jg0BJF2rpUsQjhmlbxg+b7IFOhtFcnShCF45sDgMIs4+eyP02Nv
mcwgSbtcRO4yGS4SJaUjmXAsKsC8sSXSDKj0T5No+YdB/f5X6Q+oL6b89zWG
fjODoSJu8bLOYZgYL7jK9IuKOXKtFfK6mYPFqfoD0ScR7wk8ObqF9K/MWRMv
GTcH/yvFEZzXKRB8nunckxkqVm7XK/VHxwICgtq0UqcocCc1XfQU6hE/j5e+
J19YgPGuQ8UfpUaA5fQnz7OhONYSYxm7WqwKMo7sTnf1+6F9ZelYUjSOtcnK
HZaJsoeG0UsiZvl9cPNH6qqKBY7Rrj2oca91AcsPjcl5ogR4V8L17SbaQRW+
H050C7qAhYKE5fIAAabVeyz61VBvVl0X/JfnDOlFF9gP+BHB4wWjVKsCyvm7
r3r2MTmDau9LnqN70F7+7JV9VRrt+sabjCI0TjA5I9FF/5gEv72uZtCi/BEc
rg55+9UB7K8oXXxmOQS9/AsK1vvR+bZvZ1i9Pg/na06FKv8eAo4bfrXBaD+2
sLmx3eiyB0yM/0xeCfL542mqw/+fByt733L3gR3QujRxPTs7DGMv9x3Z+w/l
vBLRILnYFpRs69zvvRuG4R3s7jk/UJ7b3E2Xj7cBTycN7WagQPHn/p6pz1Ts
XSKnSov/OZhb/Bwclk0BFm0zp+/vqJjIxq3De2ysYYfQdfzgLAVmIkkmo6NI
/x2v6FXVrWDHTv/F+hMj4KObX7digmNVrVu6gj81QEHT0lHWnQCiO778eKGN
Y2zv2ZzevtGBivvHOsI4iFBXNZdhqIzyoZ+1KL/dALJk1q/ltRPhzejLlNty
KP+PbUxq3DaB+T8iNTHeJLjyin6rDeWDql8d48VuM5gV7tdT4R6CdLbyjVLk
22tvnnPefWIBemo91wgdQ0AI7CwDtIO4/Rmjh2qtwJcybiriR4Zayr+NWuTb
dhriy/GSc5B5+9Zb7X3DkCGiKD2OfLs2ra7dlmYLQerEY3KIcz4/v2PZ/5OK
XQjauB4RaQ8yovFSQacooGJDSY5Cvu3h/rXBeskBDp7jUn+IcsNJI3thA+mW
WT/HftHZCQYiyqdJHyjQqsCRrYR0ozkpfZBY5wxdCgQmovwIzFkMVWv0UbGu
JoYY1VsuQHd7+W1d6ghkPLeyfWeOY84JU63Gmy5g7yP48p0kAZjbO7iS9XDs
AId/eiKDK9zaf53/9DsCHIyKMVkFlJ/6yhIlnK7wj6vQxS2DCItqPYJCp3Ds
TkWxX4qQK6y7KsU4K5MgZ1S2gFUSx9z8io5ZH3OFjXnpC5IrJLBZ/UJqP4Rj
/x4KqW6fcgWX3RubPWVDEP4s8p30PhyzfbIQn6DuClOXWU+LGZLB6s3vD27/
v1/ReHlk3sgVTJ9O0ltukiF7dGLVdgfaX6b76URsXaF0ac5W+94whLCzyuxF
Oeypyf7n7AVXUDn4NTdKEuXtl+2n6Uuo15pNU2UuuUKEOkGqNR71Y15S7SDK
gelHT4tpwl1BkyCx+XqSAru3PgsP/q9n7o8d9QmuADO2P8aQDw0yZwzSkJ50
urk1slmuYEfnwtlwfQSguua+TTDaF751+pydWjCqKpD28Ho/WKSWKjegnSJn
3t8f/1ANBmGS8dZ2H9BbC1VXmCKu++6W9SdEDyozff78PkcAPWFPv2ZdHNMS
1l2OttABjpnKiJllAuz3+lhfhvqO9JxB4JW0Ftw8c2OiKpYIvGtxl21QPmjf
9769zqwBJx/vJWjzkEBEbp2wiPLhuXAS069FVUjTkN3Xd48ERm+aevT//1zH
SaPnBcnKQNtREH0QhqDu9vuLsQdw7OJzA+1tFUWgv3eu13JsCMz+erxNQz7P
W6sYlV47CQV7+O67eJLBp+o7lw86l1TXhBCZBzJw1pnppxY6F90zc7L7d+LY
j3WJIq4BMeBQ+elGkzUMzZ+ctG4jbtn/VvhtuvxBqDxc+V6HgwK2A2pOWzji
Sde2uktpbNC9GuO+bkcBkxvC+RILVGzmJ92d6L/vXmZdiz6SX02B2T3WfySn
qZjxp2CdQHpOzM58OnEflQKKGse9y5GeVp4PZSaWVEHZPluFx4YAxdNJCk1I
z5oi04MdfSrgHbaWtoH0fJgeEleK9HyseMI2s+Us6Jjce9yO9JQsWrE4h/RM
PL0/UbBOASpHI4MckZ7V3aUvFpCe5VXbB4KL5eHnVEPWFNLz6j68Rw/pmXDt
YlXxdVnQYPk2IIf07ErmjItBelZ8mD8o8l0KfO4GzrojPfWqVnf8r6c0VyeB
QBGD+NCl0gCkZ+VJOStvpOdqkaGWfKMwDGVUtpojPU2mFTIEkJ72s3FH3h/g
gztHLtMxIz0PV4m03UJ6fvF0/MT/ghHWT14SNER6PkgY/rmJ9BT0vTpJdelW
6eFlyN1Ceo5+H9P/X0/Zt8URO4wZsDQ3qnoh0vOeQfzo/3q6t/EJMX7Zh8Ub
BeTxIj173Xm05i7hmJLBiyOXMjSB73hWmvRiP+QNHpNSQj0oZhDwcKNXG4yb
przyUA+uhQnoTxji2NWl9O/EM3rQP95PLawgQAJfIVghrqDgGjzSBD1g7tgt
DMeI4Ll3F+MDlM+PEgMMQmz1IfMuS+7gUyJ8n7786B3iNwmrnrjKz/pgom9/
Wl6dBDeuhWouHsexoJ+qDfWhBiDZNsYUO0SCRV118iDaO9oJKh0luxAXUR/T
16O98/lRvn0i4rp/+pfvexQYgj7PjUNPPg2BwXbXOh/Sn9/ol+vew0bwVrDA
pvQiGXiZmp8mI/2/fNSfLH1sBAfYDtU4rJPhx7cPlWSk/6S+Jz2tmjEMh8jS
bsYPA3+/ZT91A/lQ4ekbjWFj+Pz5prwiAwV+Kdcrfka71cfxkJ6zgwlofue7
6GKIfK7HvbsV9eCTNR5D668mKPfIdVdyKBD40ljD8z0VSzw04JurZApWThoX
rkxQ4HWEA2878rN112ThfaRD1Yk55T4rAnj9e2CwG+XzpqDB61BbAzAyk+3v
WiDAc80CfXHED2kh9r+ECQbgaw7EilAiuI8LHDqoiHhAUJS5/owhWMcFiZzf
TQIXr19Ty2i/HLaTkdt73xD4TUvurhWTIKku5noW4rfvMeHXLQWM4Bv7/OmL
aNebU/tO7j6I8nY74sjlNCPo6tyq63w+BH9+RODWKLcv+0iJ+2wagWbv9mtc
D/k57m9/BBuOiSfsfXDW1xgkyzMrf78lwyavBTkE7ZopODU8P2kMR2pGZ157
D8P+tOOculuIB7AzDzz1TYDrReKlrPVhKC9dqMVXqZizvp17x3MT4PyzVZSp
SQHRzJhyf9SPjw+dTgvlMgWZG+zbkE6BU001jF1IT6aUjUvrBqYgGKp/fmqM
AgktB/JeBeJYcgLVoylVE2RYw8PhZT/4LZhOmfLjmEmd148TzZ4wq5DS5MBL
BtdLq9oExKXegxlng955wr5P0VXiQWS4HxO2R24P4qgKGpO6XV6QeKcxfGGI
DOqfuhTSGHHszwM7lhFpL4BPm3ie2DD0HCb1jSL/xDzWMV+x8YJC3XMvTiD/
aGbebWdEHJW0nbi9FesFjCXkbAxxVC1/2iGZP2gvjy+sbt/zgsVT6gUH9lPg
tl/rmhbSgafNmHltzAvYI22FrPQooNpToWawTMVSpp4cfb/lBfye1urxIRRg
/dmySxXd911WYkdbRb3hM4n6tq6KAv1W5fqHP1AxrdK+zynG3qAeOt/ZS0G5
8ZJh75+3VKyA0GtgEOoNWAzTxNu/FHAO6nZpRTxcRxMgvV3hDQlPz67OSYyA
s0CrykW0U9ibDwfVDHhD358LqwvnRmBn2x9OD5QDLketdeN/GMDOD/fujNQS
YLfHFxK3Jo69MjvwrvihKcTeflpyVJ0IyRf3Fhec/f99+PmQS+4WEPWEJ9V2
mgh/Hdfj//97KM8+ERUQsAZnf2tOjxASnH1MU0kvgWMnvQb/7RixgU71qBED
9iG4HuO59Qv502nRKOFRkj1ExBxwYbw3BCOH9O49Rf4sdZ8o0VFyhPgVW6eb
GsiHvWWtOsifYhdO0r8PcwZK4DfvXe/IoLdTXuMu2nfMMhmmyWMu0PRET0gj
ZBiW7TDLKXTfZW5X5PNJucGVd7DnLrrvHU3ddDPf0O57Y9iSe/0CeLQ07+Sz
pIAcscrrEdI/41FPOf7RHS7eMG8PqKSAX9mNQiuUt05hN08cV/aEvOaR9IfL
FGhob60hjKA9mPHVWrfIC0b8bLpfKYzAGy/q4iji3mrLyj5LRReILvJumfJA
vUZZ8nflw7GS81SzxR3e8LVDU+3hUTIcU1n6KIZ4HiM4We6L9gXuQ8Kl5Jtk
OK8r8HMUcaltpin17JY/uPoO3nnFOQxix7ruOiN/0nNvTtcpBYCCZWNnR8ow
zIgEsoxuUjH/wSd1EhGB4DqWpJe7PQzHzXaLHkW8OmjqXHvr+WV4Si9oXH2G
AkI5T7ackA9pu+mOsPwJgomizbTAKxT4d/5n2bU5KkYQbAn0OnUFfE8WZcg0
UuBoVcaeSKSD5nbZ6+bgEGCa1qedXaIAVl7k6PKKij1y/lWNPw4FseWCkjjR
Ebj04Eq+OImKbZoePLrvexj8zBTcye08AsvCb1rHu6nY7YY798Wlw0FKooFa
dGMECvnb3ru3UrGND2oxov4RwDykxMI8PgJL2r7Mk4+pmFr2p9Xd968B883P
zBf3jKIekab+88Exjn72kWcm6TA92/3yjdIAbOuyubHfRZxfzmf6+O81UBb6
3ZmU1wX7eexe0P5FHFiQeM9BzAr2m2RkyFKHobNedLgN7W7n8G8BKb9jQYLS
y7lzcBAaCPQXAqtR/pS7fiTNeAFnaPayE1c3aDk9O/7hF47NpjRtebI6gMhk
Y6TJxbuQLHtrbM0b7WJbfce5YB+wKcit73YZgK7AXKuW01QsyrlVcPprNrS0
KHnO7h6HYX2ew6vlOJa91kZgnzaGWjZhud/V3dDeeGoqcxlxY8Ldll4vFyCR
VtwNyx/BNQvLex6+OLbwBT7yhTkCf81b43rNAYi97NDWWk/FLCK+bN3QvAI3
94WphiiOgn2JHPlhDo415vI+p+exAcJyMPMJvAfeSI6eZX+HYylKrU1ClVaw
auP1M/pmC1zP2P7Fivpu1G6MtuGsNfziuCx4tZACnZzco5PxOKYvE09s8tKE
Lo7Keka5PnAbSYusIeHYsIPZXnVnXXD8JZ4WXN4GicxCwt9dcaxVbqNMTNkO
0ncqjEZ8HwDK5qr//++3fP4olDcq6ASi5afyokUpsMSx5+dWCOq1w46C9y9p
QsfUjYqvJv1w3Pu4r1s7jh1llVLfw6oOa7oZEyf0O4BLyy1f2x7HdEq+sLYu
G0Iar0AXV+ogRIBKvRkDjp1Rk+uWDtQG+ov7PWINh4Fj9thkAzoXrxLXqKVO
TeB9Fqbv6zUA2o63jbfrUZ74Ju78slcVCkNPX+mS7ALRgQbmbLSzKm753/64
ZgT5Qq3kNVkCnOo7ZQbo3vHNORiZSLoAv67Eekb6MNjR1Fr1leKYu8SZiJ6R
0/Dpxq9jLGvdcHofZ6s1yslvIqKL9M0O8HO3sE/ZByIUS/wJu452NzUau6oe
HgRaZOlfJmh3+5y1+heahmNmf/2SogJPASWyccMsvheaGVZIUpaI/02FlUrv
pYLEufF9ZrsIIKBh/JyhGMcO3eR7r5wfAR+NKBaOJj0wuSXOJIb2juC/xE2j
MDOQ3rmpnZg2AtzcRZUHEL/90ez1TSiLgWqPHQWfWong0Ef0WijAsYPjuRfj
GTxB9rBUK57cAw67aF+Jf0d89b1eiHPCBUR5OEQp/Q3QeflNdLgFjmnWNRUF
W3iAIueSx9xBAiQaGuySoqViu3Uqw6ZPZsFu5Wz8yMkJ4GgmWFYX4Vh0Lx2X
3k8teNBdUFDj0AOCwuKO5+ZxLO7EMfXS224g5t579VplM/SpBz7cb4fOd3XH
xo4+G2icPRDfVzkIVdMloo5hVCxW01zK6/Nl6N9pJvMgfQx6Xo0HhCOfp02O
CS5bWYOZY0UP/OyBGckqPv9xHNsnxxgUJ3wOjBd6Qg6xvwCv19PLc81oJw6+
/65+0Ayo1pO7l2hHYbTZUWgP0v/v7J3VvEYA0fg21S/pvXB/lS+3fBDHjsm7
dlmU60KrW0BKyeV22DvL8OGaNXqdEkxpn92tIXN/QrLd4iDUGXnfoHRQsbhx
FsXuh+fB7OT4o97GEdg3M6txPwnHLJd6TmhWqoN2leHvl6u98Pkf342rXagH
T354dINeDQyvLVNmTDHwazzQ9//3tprOnk1tOa0NtA//8hbTEUCCdW/gOur3
S+lJG/6xSlCjNHP4svgIdLAVHKGPw7F7NykeQb1qIKvHsjf7fB9M7mitZG9F
/vmax8BvA5AtxkdHm9sBO0u3b24in39Pe3r216AePLumrfxNggBlzV1Gaf9/
b0IpQCOazwWeyu/+esR0BNaM/fnCm3DsROPeryshCnDiSO1l++BOeMkQk06D
9pfG9K30q28c4FXKpJ/YfhIIRUaqDT2jYtLxZbKvA66AzYzHPe/FEbjIFxIV
/wDtViHeXJ7j8nBF53ye3YEuCJumqD8kIE5WLrV4ejYOvvz99Ow3RzuwXuaR
026kYq9Xrq1WPsyFkN2fGh7zjoLUS38O1W0qdo53uHhybySMMZ/uODgwDMLu
dActxHGsYWa5JnvSCo5euSSst38IDtLrx+mcxLF0i6vBPbOO8KFHamPdgQSr
dEl7cyRx7P03GQ63aDtYyGorDZ8jAfvZmq1fiLcjHXd8SdVUh3hVyUUnxNtp
KW2gin6e1kQ2Uo7TDF4V3+5iXCJBb+s8tZUTx6IC58dPRXqCfqCcpVcCGd5Z
mnGVv0R7ltfNNf1tLOy0szs9ydcBjSkzbD7XUW/6S1XsMcyBjY4zbDoHx6Bv
gdjOhrjO807SWFl1OFy/7pV2ZecIYHLdXbUo357Ql9X3vDSAPVF5okd1huH9
i8daKv9/XyDOmU2A/TyInUrXOexHBqaY/uM1rCi3J/+c9GQ7B3ljKdddFsnQ
Ps4atZcXx4RSYuyMxU8B7inV9l2ZDFvHP7ihbYwtyYS7iWwZAql97e0LHTLI
ix8vxlFemf9m0Ioe8ALBeJLQAyUKGJRHjBo44dg4S8tQIl0GlFEeKv8UH4T1
hpglfbR3apn4/Yq0M2FKdqhrgUKAJ+e4Wd6fwLHeEq3Y0OQsUO1X6GMJJcF0
+j/KbsRFTsRPfclu2fDwqpuG3n4yRH6/RDeIeFvx5YeCatoc6NDlUoruGIaP
4exVBz9RscuhDEwMt3IgqiH8/cAjxCEXqJPsKPeoI00c1Sq5IH5k7+9HcSOw
4vJJdP0+ev143VJIeS7EhTLXvpYfhXwV4VK3Miq2+MOQh9klF9Tz9tGM3ByF
pyqbUiHpVMxS2/nZBZFcSHy4YzWXfgxCPnyVOHGNis0Q+WYT5nPAv+9it4D/
GAipFU/l+1Ixyuu0Sr/aHKh7fLHV+9UYrB1vyL5lR8WCRNcZBL1zgE3CQjji
7CsoNB4tO6dHxXp3pUsUSaDHFWXVjW+/gnuv79EVm/3vH58fwc2xsJ/zSHUO
EIAv0++FjTaOSfedHg5VioUJfu7TBziJ0BylI4GdwbEDktFvFHpioLbQmd9/
gQhx3Y8uE6VQvz/pZHhhEAOt8wLN4c9J0HDxxJNIYZTzrfSNGzXR0LGe6auR
PgTp9+x5JpB/jHNtMxibo6DBxOdutyMZcovG2l/tRlxd/vlOdWckfHm38fq3
zDBwJw24Hb6P9iAW6rIokQT0FU/KJsy7gDp+fv7PEbR/p7fueM9YwdffLM4h
muj5X9+JCT2A+kJgqI1r2Qqk29r/To8NQa+xHon0/+dSZr1Kb69bwe/n3r/2
u5HB8e/Imz9o1/s5iR3lZLAGPYWHEvKrZKijC2vZRP2rtRvX9OCyhrIbLrGH
YxG/efGFjyPOJxgKT5YesobK0WnqT8T5hsGKcklo1196Xk1qkrKGLyOKe9VN
KBBxXWLOwx3HdvIqXLmh4Q0lj941SmADYBseW8rtgGMBVzXFpYU9QYxxZmHS
fRBGL16PTkc5XMTcQRtK4w4+e9UT3FkIMBvwtoJogHLmo8jt0BlXIPAvDA48
JoCQrSLrmDqO7T2scO9UmzPILUqv09oSoT6w6O1ttOs16Xqjg+QcwEvtgOXe
bSJUM7HynkU58+HwF05Wqg1QY2wEf1WToC+Oy1gP7evliEvqx/uuwZMY7s/G
ayjf2qrXs9Dv9TIsW/l0cwRIW616ZxpRoEprZ08F2i8h6xM5rLfDoTF15vSb
CgqEhAwTwqao2B6dcqGmrKvQKkSho1ulALnznaQAhYpVf3vWKxEZBqFzA7/Z
NUeAhUWaKbmHitlX17qG+oSC1vA+hX8FIzB/9mt8G8rzbaWz46XnQuBwY9IK
AeU5VUuHIScdx+IdS3Orm6LhFg3tZLVbL+wxFaoP9UT8kzH0LTzGEVKop7pL
CwagzJVl3NQZneNjBXXrLEewSVLaZD0yCC2Fd4DGFsdO/6ka21PuCAcTb5xw
ezoIyWeW1hLRvcBimRNr6x3hUTO91g1tAmSnhu/6iHKm6+PXU4KtjqBKTON6
PEGA8Ku3wrmQ/jiNBiFg0BG+fLsRfdeDCAaBJs6C6L4sU7MP3n7tCGHqjB7R
a0TIHJ8uvJCFY3TmlcUPI71BotqFN0a0F3qMZKkyNii373OpMgsYwi726iq3
vkEQ2YMMj3rTc8NHL6FaH+b4JIV3Iz5sSNPV+452dPHNuIC543pwoGCQs/Qm
ATZyzjdI6eCYx+Q/8+MtOtBIk0azn5EIkYVKS5ZqiHvHyJnOqtpgWlURkBpM
BM2qSNoLiBsz8o92RQ9qwqqO7fL8eyLka3/espdH9/dQVFq6uQa6v8e3jhuQ
IMDcRJcZ5TCbf2RQhrodeD/WbwmB//fLaa7faNdkxTE+Yze0A+GW+tzbhEFg
HPLjaTNF3Nv0dcHHyg7OdtdEPbYigE+csq0d0vOod9DXUkc7UJn8GVrzgQD0
51MWR9Dr/Cac+qjK0w7qve5F/P/5XrpZjCSM9Hywo1k0LsAOhFKkkmWQnoyh
H7iMZHEsx5xd/vRVOxDU0SnuiyHB74h1axnkk/Suooh8XSuQkjwxo3K5F0z+
LjznQD8/EiPbpzLnCErBrKvdCSS4kNx9nuv/9w1O+OzYXHaEDJEDSaf3DAFX
jGTkt0Povmj9nkj75Qi1KmPsKSVD0K/+VuwO6pFVkyy5738doZ6BL6dFhAxT
NnsuynPgWIS3HP2xXU4gedBpV9cDMgS73bYv///vZbQrZxTZnGCQWhJQe3oY
7s7/oJlFXCFUVNcjwOMEv4W0KR6dw+A5cEYhPAb5U+Lt/o/LNhAYXpnHHN0H
r09OMXegvb/Oz8h9Sc8YfJz/sqZ6EeC+OCN9vT6O0RQ4pxDRvqNL2xyRGCCA
fUdQfaIWjjHJilzbF2ACEomWEu1HiZDw7Qe9kSqO5fV/lL+7wxQOc73tUk0m
ws+lOG5a5AfJoz5flQ1MoZQmQOcJyvnePWfeVyM/vB3YuDmYbwpyrPsu8GuT
4Osnc095lCe/z/xiMZwxhf8qNg9/KvswjEtmZpQkXiqVkaiU7ZadvcdxVLaM
QpJsSRQhkZBCKS9CJCl6IvtMIyslKyHPscroLe/PP/Cc59yf+3dd3+vzXD/s
x3jzxSIyNPAPn+lB81QIfjY8bESAVZ42y6vMFMjl2UtKlmRggRsFkZqpjkBY
yE5J9qeAKF6sII9022ztT0JajwMsiZVl3RqgwNjg0XtvECe4p01Se3Y5QBRf
3K8gHSo89Cpnlkdz/ioSKMlJtAf/hlpFvXIqpP7UjUzehuYfuo9wNN8OmoS3
DjPtpkEbmPP0ID13SJQ6ZTphC/0f9EKK4miQ0zd4CQtGujol7LqjzgC0L6yx
CcW0AV32cbIv4kyjKeY/pznOQnLfvqmXO8ggncVZfeg48gtpwfKF6nMwmpk0
UBlIBj5fm8BuOQYW+736fd24C+zcyz6TRyVDMV8IyVcKcexUs3KEoBs8rcql
hMtSwEY4qmUJ+SOL+jNhZR13uM3hecIokQJ5KtluPmIolz165/ojyAPGNXJ6
OCYpUKq5vYSG5tB6OHj3/UJPEH1ynVB7igrv5/Np/vIMLCbigeVLf224fT5Z
lq+aDHkZAdHTiEt5h/ZcK2XSgZ7W4VArAQoYS6qvWKH56xwcWr97Vwealkqs
4gMpMNLwWK0EzX9m97Sy/0FdeMvh7fGMToGGbC9LBuK3tFbZNyfrdCFn70Pn
1/JUuDDnpbEP8ae0Pu8fhrEeKMUtTtWmUIHl4xMWHcSBgvxnYu5/0QNnlUMv
iuaoYDVX/dwa5eKxJzl3nksawtpvUlj9xXYgfj1yvQHtyZzluKl5gyVoCDRO
b2OhwPpWqeOmB1DOnYoboIvawMtUhcqv5yjwvqQoniSO9Co+tUw/wg5Cyste
PW2gwA2p5WhlEQamnM1CKf/kABp7vCqIIlTgco44mLEDnVO+Oxrsak5AFHlp
wnyFCu5DHyK/8KL8ctme2SzHGTqK2E9l9VABW/a7tYuTgaWn0cVj186CwNFl
zT2IQ1Z6neTcHTZ7Vs3lNyctIcBOtSy4qQMaWh0zEwUYmH74HonEnd6wTSxC
dCaLCpd1hFOU0fPrY47vij3hA4+/vONK/UyFS/2LD76g53tfIzUG2vqBbX1/
kMx+GsweGv0QxsrAqHYkEcfLF6DL31Sh3psGZRPjLDxbGJhKTj1vrlEAzHnV
7tMtp8GNJRbXTOTXxRulY3GEQJD99kaqaYkGvAn2nwVXccw2d1uCp08QlD2/
zp8rijhk3W3FDPlC/YytoNjpJHgoz7affa0T5k/XKh5E+zMrkiJPcEsGyoN8
nW//kqF0rKk5GvFSTfJWC9eI26C3Ht036EgF8kqcBxHxj9FN1nSJjBQok04A
FxY6DBT3cjV8xrHHQeXyMSWpQBDivqz1iQ7w1G+8EMOxpF1XtV+dTQNP78KZ
sBddwG5GNePLxzFpZetb3tNpMEEz5NqS0A0/9jU5PYrDsShzpvkstTuwVvef
da9mD1SIuXPoBOHYziEBcjHTHdDcWNChlfZAZS1TRvw5HJM4sO4Z3ZIGQUdk
2W4J98LRRhd7LzMcI1i2jIreSgP/ofYs5vheuHnlUMV3NRzLaSxyvmaWBjUG
Q79OLvSCkl/xb05pHEsMPPqnUiANfNM19h9w/gjNMsP5pJ04dmVDtNP6eSoY
nZcRJ7V/hOy8DSGpkwzMdNFPSokYA0wC3WouymTEA6/zfNC5ey08Lkfsjoa7
4V6TkUKIS09EHjktysA+mxXcbZyNgq8PjwdbLFOgNd1w/gPaE57G3VWFLFEo
x2VW93ZRoStsiOcTEwO7JyGJbRWLhMrE9AC2ChpMVr2qSVlE89SS/vVdMQIk
DXka5vXocEBxv8gIyimzsqNZdibhMGxbRFd4SQel8CRX6VwGVhlRobjHOB6i
G10Oqa9/gFxLbstKFgaWcVumkGfDGESkJ48Kh9DAzFzw5tIajjG/TguImzCB
8INGz6i8dHC52Sj0F8exQdZZ3w8dplC/n0YKdqWD40q4EB397pbcOVFSuRkY
RNsU/KmhQ+XQRNH5ARzbwyHBe/+uOXASOXS8Obvg70b/eCcZx0yVuicF1S2g
rjmTXE3sAu+93vNL73FssSdtQa3cAr7zqhFGKrrA0EvVb58Z8uuf4j0/JT3A
HfOuL77RCQVzmfZuukjniZYfYzncYJCksXZKnQQxV7vfuSBOYC0yEXs7ew4i
9a0jShdI4OLkWCuGfCpfxL3IIs8Z1my+/x17SganexoOWUhnqvUctfJdHaEr
kE3tmxMF6OZqb6hIT/zqHTyDDtnCgafZs1X8VMiTrF35wId0m03rSu+sBbDV
J5L1W6jQt5R6+95HHONO6a4udAiD3X9FCtJFu8BpNUyPowPxsE/lYdnTV6El
UFtEPqQLtgyONCjX45jMz+CaSJVQMJB/VfOU1gX7WS3FpSpwjLTT42We9BV4
kv3DYVWqG/x5BDP6CnCsWt8kJWV3CHw+Uji971o3hOkJGOpm4FjCctMza87L
cHVZzuzAp27I5hz2DryBY74pvR7zq5fAorDG/+/xHpC5r+LLFIr2TV/mdUd7
JLhEq2/AiTZgfld2Tt0W8YBZJZWV3REaB99/idnogKjly04ExJkOnyOn2MId
YTULb00q7oSEQKUlTR00/0QpqWncEcxCRo77W5KgtXVJZQblDmIsv0WpKwHM
O+Kt9q+TwIYxrU1E8x8Y3i5u0kcA7TNhFmWFyE8HMvZlohzHzJ9m23naCQKU
eIhsxhS42V+CZ6Dzwu8d+1KywQmGTtk9kV9CfnQ2yPFnJANbto+NIDZ5AvUN
YaD6VSvY/nN++2Zf4k2AT2EJUQ+OlWhcZ3PohNDst983v+8bb4hedP6oA6+S
mQZmfnTCvoRC1c2+hCu7ru2MqTYs3AbW8lgS1HLx7djsSww4d6XZtGqB3W0y
2UyIDHdpldc2+xJhNEKDZqQm0MwnGaQSMoy//pmx2ZdIeKC1luuvBgnn1BUk
gQIZeZyEzb7EDeMQqzZnZdDDt1jYoRx63ip0yh7lC07n3P9OX7KD0BquMmmj
TtAJHNVdQfocxJwqz5pkB4NTto/D1zvhh8mkpIMmyq01T2tvFKK8aagql19C
AjOnhdzNfu/Yju0G1Do70CORT2YSyCARO4OdQX4a1GNy5xPdDhILJp47bKPA
4djDxSwSDMx2Wda4fMoO1H8qxH6vowBme9PfD+l842KfjP5fO9DKMc3XPk8F
2efZR11jGdiR+asxUo4WsNY0YNjr0wo5PY7RasjvICepOVqICEkrgb7H8qhg
rOD0x4qdgcnIrl6UliNCy6JKzykTGmS2vb5/GPnUncYQznQdIkzt/t0h9JsG
PI17LrbP49i6jKZBnSMRAv4zLui3oUNced6jg5M4lukpPvbwIhEKwirus5TR
YeJku5HBINIH1j2Z2vFEsGlg19++tQu4bDLSZSg4Nvr1oNiTHCI4TC8++c+x
C3b+Z8HYGsHA3t3m/NZJtIObI4ntcmOtIG3AIViL9OTeNfeF/ZxGwMYVXyod
0Qn/Dr0SWdm8383RcnHkqhF83eU0KcZDgh5BkQVuYGDqgf/Ihc0YAawPmyzm
kUD/r2fhKtL/iMRGnSWCMXSoJL8tOkKGU22Ram+OMLDz9v7U0yRjeB9txqWE
kcE/crrDEu35xAnb7xFqJtBKuCxUZE6BqY4RJwzxXu7AwedJpSYQu9FSi48g
3guKP8PPxcCi4t4ahfXbgYRcYnczPw3+8Upgq0c8UH6wRVFP0A7Ev7knhD+h
AecY46ka8v2X9RTXVTNb2GlzJnAr8n37yvdWqUi3WR5FRGTesoHbk6ofqzyQ
Ppu+EaudQDpTFXzon1Zr+HjwipVxBR08eAii1UM41mZrzJGxxRrSb6WYkFfp
QKYNuMWh/B42w/1hVd0KPkjaHDqh3QXTh00KNnuPnr+1RwuttcFpTlP1sVEb
cI8/mhVDnCwQYveV2fksRDs8bPIIIsMN3nIUQtD/reKr9eB0gQ8O69aG3BSw
jdNYUEA56x5z7gK4u4L6ic4dW59SwPvXjtHFXZu9uzRWHswNvtdsK8wAKuwV
7VeI37x/7ZQ90LHbAy65WmT/HqDCLXXmpSnka4b8zhaXgj2BTbL7/skgxFEN
DNU9v3EsUve+FRvNCwrn68QLWemgyxI6+QDtf5LoCO8fr5NgWkNINPKkwsRb
78g6bsRd1Rt9VQZKkF1kqWD8iwo/zkjol6Ec8e3OMQ/FQ8qgdadeUPIGDVL2
B1hcRlykQTCaiWZTgaBTzewz2+ggnNr9fMcCjtE+v8y9O6kCwrRspudWdFAc
9Am4NYVjLoobL/ybVYEk4udGyKHDJyJLaR/iqIsH2L25H6uBmUzuo4VROlCb
+L89ucTAojXrOA776EGwIodlRVYbWBjfaB9EfLuUf04gOsYMnMZDsaogKhBO
Db4gov1RvenNXPHTEuIF5nBubhrsrPpXuBLtD+H9chZTqQ1YzIYTVItosHt4
nr93BccMLfv5jpyzh+SMDLqoOB1mwmMqNu89ZdpdOHZ0JwEoFL8X133Re04w
b0tBvv9Np69jaycRBJ2kJHpr6RDUvH5SEp1T5h3PCh5FnYWW6Wz/bSxdwPmt
31bdC+WO5pIz17ksYWgqhjc5px3leMGFZjQfxTj5/fSw8+D775DWAVM6NCQe
//lzGsfMF63a7q/4glt4yfxcAh3aOWVat43h2LASWc4g+AJku0TpFzfRoSNq
0n8r2ttnEpO/fEMD4E965oL1H6QbdY9+jXTh2NjZH7THrwLhE7t7wbxSF1yI
+OKTj3z502j9hY7lIOguvs0aFdQF7S8ufdRtRD7+7qrEp2PBgGtNUH6XdcH/
dSwF7Q==
      "]], Axes -> True, AxesLabel -> {
      FormBox["\"batch size\"", TraditionalForm], 
      FormBox["\"iteration\"", TraditionalForm], 
      FormBox["\"MSE\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {748.7984706855411, 319.2307692307692}, 
    Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, PlotLabel -> 
    FormBox["\"\[Alpha]=\\!\\(TraditionalForm\\`5\[Times]\\*SuperscriptBox[\\(\
10\\), \\(-5\\)]\\)\"", TraditionalForm], 
    PlotRange -> {{1., 101.}, {1000., 9000.}, {0., 512.7212531384049}}, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {-3.3827494938346474`, -0.07297867281387489, \
-0.04098750145793125}, ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{"\"train\"", "\"test\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.740033766933878*^9, {3.7400339371436987`*^9, 3.740033947567726*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowResBI2D", "[", "res7", "]"}]], "Input",
 CellChangeTimes->{{3.7400344427799506`*^9, 3.74003445149856*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 89.10505728125224}, {2000., 66.1230711913047}, {
         3000., 56.92443372447203}, {4000., 54.826726265635145`}, {5000., 
         53.29692492082962}, {6000., 51.74857610560899}, {7000., 
         50.832767672300655`}, {8000., 50.380534117994976`}, {9000., 
         50.25759997195042}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 91.14631131529688}, {2000., 64.24498604767705}, {
         3000., 51.45625701064812}, {4000., 46.45245141553478}, {5000., 
         42.706094585488906`}, {6000., 39.86057402378395}, {7000., 
         37.73242992516905}, {8000., 36.27840205951104}, {9000., 
         35.011176023876935`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 301.46421857574603`}, {2000., 
         205.76989408880596`}, {3000., 157.88158209228433`}, {4000., 
         135.1458018576508}, {5000., 125.36213477216388`}, {6000., 
         115.30479732979165`}, {7000., 108.70160767282091`}, {8000., 
         103.450826609548}, {9000., 99.53311672104381}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 265.24376382393785`}, {2000., 
         180.64619985135096`}, {3000., 140.7859671546732}, {4000., 
         123.18563001358245`}, {5000., 117.02344186206541`}, {6000., 
         109.37487163675519`}, {7000., 103.46494688491418`}, {8000., 
         99.28451730627692}, {9000., 96.07340553941133}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 512.7212531384049}, {2000., 480.76209572278134`}, {
         3000., 473.05748972021274`}, {4000., 491.31898244146106`}, {5000., 
         466.79273353452396`}, {6000., 473.82093316654345`}, {7000., 
         471.0487729315507}, {8000., 464.5648316282554}, {9000., 
         439.44056270997413`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1000., 467.0022796347405}, {2000., 438.79099180655686`}, {
         3000., 430.5087322905669}, {4000., 449.8035684295883}, {5000., 
         424.37703485952335`}, {6000., 433.92741681747765`}, {7000., 
         431.7973484480205}, {8000., 426.79862438406474`}, {9000., 
         401.2445526654226}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 9000.}, {0, 512.7212531384049}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"iteration\"", TraditionalForm], 
       FormBox["\"MSE\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Alpha]=\\!\\(TraditionalForm\\`5\[Times]\\*SuperscriptBox[\\\
(10\\), \\(-5\\)]\\)\"", TraditionalForm], 
     PlotRange -> {{0, 9000.}, {0, 512.7212531384049}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"b=1 train\"", "\"b=1 test\"", "\"b=10 train\"", "\"b=10 test\"", 
       "\"b=101 train\"", "\"b=101 test\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7400344523015594`*^9, 3.740034541228056*^9, 
  3.7400346447784166`*^9}]
}, Open  ]]
},
WindowSize->{1278, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>1.3 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (October 8, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 27658, 694, 2890, "Input"],
Cell[28219, 716, 3013, 66, 285, "Input"],
Cell[31235, 784, 13452, 333, 1404, InheritFromParent],
Cell[CellGroupData[{
Cell[44712, 1121, 130, 2, 39, "Input"],
Cell[44845, 1125, 15054, 307, 325, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[59936, 1437, 131, 2, 30, "Input"],
Cell[60070, 1441, 15420, 314, 321, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[75527, 1760, 131, 2, 30, "Input"],
Cell[75661, 1764, 14817, 306, 321, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[90515, 2075, 187, 3, 30, "Input"],
Cell[90705, 2080, 15943, 318, 333, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106685, 2403, 134, 2, 39, "Input"],
Cell[106822, 2407, 16762, 344, 316, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123621, 2756, 134, 2, 39, "Input"],
Cell[123758, 2760, 16811, 345, 316, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140606, 3110, 131, 2, 39, "Input"],
Cell[140740, 3114, 395, 8, 30, "Message"],
Cell[141138, 3124, 395, 8, 30, "Message"],
Cell[141536, 3134, 393, 8, 30, "Message"],
Cell[141932, 3144, 394, 8, 30, "Message"],
Cell[142329, 3154, 98164, 1715, 436, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240530, 4874, 134, 2, 39, "Input"],
Cell[240667, 4878, 29510, 605, 325, "Output"]
}, Open  ]]
}
]
*)

